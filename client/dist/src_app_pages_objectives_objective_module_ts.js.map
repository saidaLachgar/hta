{"version":3,"file":"src_app_pages_objectives_objective_module_ts.js","mappings":"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","sources":["./src/app/pages/objectives/objective.module.ts","./src/app/pages/objectives/objectives-list.component.ts","./src/app/pages/objectives/objectives-list.component.html","./src/app/pages/objectives/objectives-routing.module.ts","./src/app/pages/objectives/objectives.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { UserRoutingModule } from './objectives-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ObjectivesComponent } from './objectives-list.component';\r\nimport { NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    UserRoutingModule,\r\n    SharedModule,\r\n    NgbProgressbarModule,\r\n  ],\r\n  declarations: [\r\n    ObjectivesComponent\r\n  ],\r\n})\r\nexport class objectiveModule { }\r\n","import { Component, TemplateRef, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport { BehaviorSubject, Observable, of } from \"rxjs\";\r\nimport { switchMap, tap } from \"rxjs/operators\";\r\nimport { Objective } from \"src/app/core/models\";\r\nimport { ObjectivesService } from \"./objectives.service\";\r\n\r\n@Component({\r\n  selector: \"app-objectives-list\",\r\n  templateUrl: \"./objectives-list.component.html\",\r\n})\r\nexport class ObjectivesComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  form: FormGroup;\r\n  months: string[];\r\n  current_year: number;\r\n  submitted: boolean = false;\r\n  loading: boolean = false;\r\n  data_loading: boolean = false;\r\n  planned: boolean = false;\r\n  edit_mode: boolean | number = false;\r\n  data$: Observable<any[]>;\r\n  private refreshTrigger$ = new BehaviorSubject<void>(undefined);\r\n\r\n  constructor(\r\n    public service: ObjectivesService,\r\n    private fb: FormBuilder,\r\n    private toast: HotToastService,\r\n    private modalService: NgbModal\r\n  ) {\r\n    this.months = [\r\n      \"Janv.\",\r\n      \"Févr.\",\r\n      \"Mars\",\r\n      \"Avr.\",\r\n      \"Mai\",\r\n      \"Juin\",\r\n      \"Juill.\",\r\n      \"Août\",\r\n      \"Sept.\",\r\n      \"Oct.\",\r\n      \"Nov.\",\r\n      \"Déc.\",\r\n    ];\r\n    this.current_year = new Date().getFullYear();\r\n    this.data$ = this.refreshTrigger$.pipe(\r\n      tap(() => this.data_loading = true),\r\n      switchMap(() => service.getData(this.current_year)),\r\n      tap(() => this.data_loading = false)\r\n    );\r\n\r\n    this.form = this.fb.group({\r\n      date: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/^([12]\\d{3}-(0[1-9]|1[0-2]))$/),\r\n        ],\r\n      ],\r\n      id: [null],\r\n      count: [null],\r\n      plannedCount: [null],\r\n      goal: [\"\", Validators.required],\r\n    });\r\n    service.loadGoals();\r\n  }\r\n\r\n  refreshData() {\r\n    this.refreshTrigger$.next();\r\n  }\r\n\r\n  showForm(p: boolean, month: number, goal_id: string, achievement = null) {\r\n    this.edit_mode =\r\n      achievement && ((p && achievement.p) || (!p && achievement.r));\r\n    this.planned = p;\r\n    this.openModal();\r\n    this.form.patchValue({\r\n      date: this.current_year + \"-\" + String(month).padStart(2, \"0\"),\r\n      goal: \"/api/goals/\" + goal_id,\r\n      id: achievement ? achievement.id : null,\r\n      plannedCount: achievement && achievement.p ? achievement.p : null,\r\n      count: achievement && achievement.r ? achievement.r : null,\r\n    });\r\n  }\r\n\r\n  updateYear(year: number) {\r\n    // this.data$ = of([]);\r\n    this.current_year = year;\r\n    this.refreshData();\r\n  }\r\n\r\n  deleteAchievement(p: boolean) {\r\n    if (confirm(\"Vous êtes sûr de vouloir supprimer?\")) {\r\n      if (this.count.value && this.plannedCount.value) {\r\n        p ? this.plannedCount.reset() : this.count.reset();\r\n        this.modalService.dismissAll();\r\n        this.persistAchievement();\r\n      } else {\r\n        let id = this.id.value;\r\n        let _this = this;\r\n        this.service\r\n          .delete(id)\r\n          .pipe(\r\n            this.toast.observe({\r\n              loading: \"Suppression...\",\r\n              success: () => {\r\n                _this.loading = false;\r\n                _this.modalService.dismissAll();\r\n                _this.form.reset();\r\n                _this.refreshData();\r\n                return \"Supprimé avec succès\";\r\n              },\r\n              error: \"un problème est survenu, veuillez réessayer\",\r\n            })\r\n          )\r\n          .subscribe();\r\n      }\r\n    }\r\n  }\r\n\r\n  persistAchievement() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) return;\r\n    let _this = this;\r\n    let toast = this.toast;\r\n\r\n    if (!this.count.value && !this.plannedCount.value) {\r\n      toast.error(\"Vous devez remplir le formulaire\");\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.submitted = false;\r\n    let objective = this.form.value as Objective;\r\n    objective.date = objective.date + \"-01\";\r\n    let request: Observable<Objective>;\r\n\r\n    if (objective.id) {\r\n      request = this.service.update(objective);\r\n    } else {\r\n      delete objective.id;\r\n      request = this.service.add(objective);\r\n    }\r\n\r\n    request.subscribe({\r\n      error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n      complete() {\r\n        _this.loading = false;\r\n        _this.modalService.dismissAll();\r\n        _this.form.reset();\r\n        _this.refreshData();\r\n\r\n        toast.success(\"Terminée avec succès\");\r\n      },\r\n    });\r\n  }\r\n\r\n  @ViewChild(\"content\")\r\n  private content: TemplateRef<any>;\r\n  openModal() {\r\n    this.modalService.open(this.content, { centered: true });\r\n  }\r\n\r\n  get date() {\r\n    return this.form.get(\"date\");\r\n  }\r\n  get id() {\r\n    return this.form.get(\"id\");\r\n  }\r\n  get goal() {\r\n    return this.form.get(\"goal\");\r\n  }\r\n  get count() {\r\n    return this.form.get(\"count\");\r\n  }\r\n  get plannedCount() {\r\n    return this.form.get(\"plannedCount\");\r\n  }\r\n}\r\n","<style>\r\n    .editable-cell:hover{\r\n        outline: 1px solid rgba(32,45,52,.4);\r\n        cursor: pointer;\r\n        transition: outline .05s;\r\n    }\r\n</style>\r\n<div class=\"container-fluid mb-5\">\r\n\r\n    <!-- start page title -->\r\n    <app-page-title\r\n    title=\"Etat de suivi des Objectifs {{current_year}}\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n\r\n    <div class=\"row mt-4\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card card-body\">\r\n\r\n                <p class=\"text-center\">\r\n                    <button class=\"btn btn-light font-size-10\" (click)=\"updateYear(+current_year - 1)\"><i class=\"fas fa-chevron-left\"></i></button>\r\n                    <b class=\"mx-3\">{{current_year}}</b>\r\n                    <button class=\"btn btn-light font-size-10\" (click)=\"updateYear(+current_year + 1)\"><i class=\"fas fa-chevron-right\"></i></button>\r\n                </p>\r\n\r\n    <table class=\"table table-bordered\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\" valign=\"middle\" rowspan=\"2\">Intitulé de l'action</th>\r\n            <th scope=\"col\" valign=\"middle\" rowspan=\"2\">Obj</th>\r\n            <th scope=\"col\" colspan=\"2\" *ngFor=\"let month of months\">{{month}}</th>\r\n            <th scope=\"col\" colspan=\"2\">Cumul</th>\r\n            <th scope=\"col\" valign=\"middle\" rowspan=\"2\"> % Obj</th>\r\n          </tr>\r\n          <tr>\r\n            <ng-container *ngFor=\"let number of months\">\r\n                <th>P</th>\r\n                <th>R</th>\r\n            </ng-container>\r\n            <!-- Cumul -->\r\n            <th>P</th>\r\n            <th>R</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf='!data_loading && (data$ | async) as data; else loading_template'>\r\n            <ng-container *ngFor=\"let group of data | keyvalue\">\r\n                <tr>\r\n                 <td class=\"bg-light fw-bold\" colspan=\"29\">{{group.key}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let goal of group.value | keyvalue\">\r\n                    <td>{{goal.key}}</td>\r\n                    <td>{{goal.value.target_achievement}}</td>\r\n                    <ng-container *ngFor=\"let number of months; let month = index\">\r\n                        <ng-container *ngIf=\"goal.value.achievements[+month + 1];else empty_cells\">\r\n                            <td class=\"editable-cell\" (click)=\"showForm(true, +month + 1, goal.value.id,goal.value.achievements[+month + 1])\">\r\n                                {{goal.value.achievements[+month + 1].p? goal.value.achievements[+month + 1].p: \"\"}} \r\n                            </td>\r\n                            <td class=\"editable-cell\" (click)=\"showForm(false, +month + 1, goal.value.id,goal.value.achievements[+month + 1])\">\r\n                                {{goal.value.achievements[+month + 1].r?goal.value.achievements[+month + 1].r: \"\"}} \r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-template #empty_cells>\r\n                            <td class=\"editable-cell\" (click)=\"showForm(true, +month + 1, goal.value.id)\"></td>\r\n                            <td class=\"editable-cell\" (click)=\"showForm(false, +month + 1, goal.value.id)\"></td>\r\n                        </ng-template>\r\n                        \r\n                    </ng-container>\r\n                    <!-- Cumul -->\r\n                    <td>{{goal.value.target_achievement}}</td>\r\n                    <td>{{goal.value.cumul}}</td>\r\n                    <td>\r\n                        <ngb-progressbar \r\n                            [value]=\"( goal.value.cumul / goal.value.target_achievement ) * 100\" \r\n                            [striped]=\"true\" \r\n                            type=\"danger\"\r\n                            [showValue]=\"true\"\r\n                            [animated]=\"true\"\r\n                        ></ngb-progressbar>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n        </tbody>\r\n        <ng-template #loading_template>\r\n            <tbody><tr><td colspan=\"29\" class=\"text-center\">Chargement...</td></tr></tbody>\r\n        </ng-template>\r\n    </table>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n\t<div class=\"modal-header\">\r\n\t\t<h4 class=\"modal-title\"></h4>\r\n\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss()\"></button>\r\n\t</div>\r\n\t<div class=\"modal-body\">\r\n\t\t<form id=\"obj-form\" [formGroup]=\"form\" (ngSubmit)=\"persistAchievement()\">\r\n            <input type=\"hidden\" formControlName=\"id\">\r\n\t\t\t\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"input-date\" class=\"col-md-2 col-form-label\">Mois</label>\r\n                <div class=\"col-md-10\">\r\n                    <input \r\n                        type=\"text\"\r\n                        formControlName=\"date\"\r\n                        id=\"input-date\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"aaaa-mm\"\r\n                        [ngClass]=\"{'is-invalid':date.invalid && submitted}\"\r\n                    >\r\n                    <div\r\n                        *ngIf=\"submitted && date.errors\"\r\n                        class=\"invalid-feedback\">\r\n                        <span *ngIf=\"date.errors.required\">Ce champ est obligatoire.</span>\r\n                        <span *ngIf=\"date.errors.pattern\">Format incorrect. Utilisez le format AAAA-MM.</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\" [hidden]=\"!planned\">\r\n                <label for=\"input-p\" class=\"col-md-2 col-form-label\">Planifié</label>\r\n                <div class=\"col-md-10\">\r\n                    <input \r\n                        type=\"number\"\r\n                        placeholder=\"Planifié\"\r\n                        formControlName=\"plannedCount\"\r\n                        id=\"input-p\"\r\n                        class=\"form-control\"\r\n                    >\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\" [hidden]=\"planned\">\r\n                <label for=\"input-r\" class=\"col-md-2 col-form-label\">Réalisé</label>\r\n                <div class=\"col-md-10\">\r\n                    <input \r\n                        type=\"number\"\r\n                        placeholder=\"Réalisé\"\r\n                        formControlName=\"count\"\r\n                        id=\"input-r\"\r\n                        class=\"form-control\"\r\n                    >\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n                <label for=\"input-r\" class=\"col-md-2 col-form-label\">Action</label>\r\n                <div class=\"col-md-10\">\r\n                    \r\n                    <ng-select \r\n                        formControlName=\"goal\"\r\n                        placeholder=\"Action\"\r\n                        [ngClass]=\"{'is-invalid':goal.invalid && submitted}\"\r\n                        >\r\n                        <ng-option *ngFor=\"let goal of (service.goals$ | async)\" [value]=\"'/api/goals/'+goal.id\">{{goal.name}}</ng-option>\r\n                    </ng-select>\r\n\r\n                    <div\r\n                        *ngIf=\"submitted && goal.errors\"\r\n                        class=\"invalid-feedback\">\r\n                        <span *ngIf=\"goal.errors.required\">Ce champ est obligatoire.</span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n\r\n\t\t</form>\r\n\t</div>\r\n\t<div class=\"modal-footer\">\r\n\t\t<button *ngIf=\"edit_mode\" type=\"button\" class=\"btn btn-outline-danger\" [disabled]=\"loading\" (click)=\"deleteAchievement(planned)\">\r\n            Supprimer\r\n        </button>\r\n\t\t<button type=\"submit\" class=\"btn btn-primary\" form=\"obj-form\" [disabled]=\"loading\">\r\n            {{edit_mode ? \"Enregistrer\" : \"Ajouter\"}}\r\n        </button>\r\n\t</div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleGuard } from 'src/app/core/guards/role.guard';\r\nimport { ObjectivesComponent } from './objectives-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: ObjectivesComponent, canActivate: [RoleGuard], data: {access: 'objectives_show'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from \"@ngrx/data\";\r\nimport { Observable, Subject, concat, of } from \"rxjs\";\r\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { Goal, Objective } from \"src/app/core/models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { goalService } from \"../goals/goal.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ObjectivesService extends EntityCollectionServiceBase<Objective> {\r\n  private server = environment.serverURL;\r\n\r\n  goals$: Observable<Goal[]>;\r\n  goalLoading = false;\r\n  goalInput$ = new Subject<string>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private goalervice: goalService,\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory\r\n  ) {\r\n    super(\"objectives\", serviceElementsFactory);\r\n  }\r\n\r\n  loadGoals(): void {\r\n    this.goals$ = this.goalervice.getWithQuery(\"properties[]=id&properties[]=name\");\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  getData(year: number): Observable<string[]> {\r\n    return this.http\r\n      .get<string[]>(`${this.server}/api/objectives/get-achievements?year=${year}`)\r\n      .pipe(\r\n        map(response => response[\"hydra:member\"][0])\r\n      );\r\n  }\r\n}"],"names":[],"sourceRoot":"webpack:///"}