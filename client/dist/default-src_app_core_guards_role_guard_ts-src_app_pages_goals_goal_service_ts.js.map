{"version":3,"file":"default-src_app_core_guards_role_guard_ts-src_app_pages_goals_goal_service_ts.js","mappings":"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","sources":["./src/app/core/guards/role.guard.ts","./src/app/pages/departments/department.service.ts","./src/app/pages/goal-groups/goal-group.service.ts","./src/app/pages/goals/goal.service.ts","./src/app/pages/medias/media.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoleGuard implements CanActivate {\r\n    constructor(private router: Router, private authService: AuthenticationService) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        let authorized = this.authService.isAuthorized(route.data.access);\r\n        if(authorized) return true;\r\n        alert(\"accès refusé\");\r\n        this.router.navigate(['/dashboard']);\r\n        return false;\r\n    }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { concat, forkJoin, Observable, of, Subject } from \"rxjs\";\r\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { Department, Pagination, Team } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { mediasService } from \"../medias/media.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class departmentService extends EntityCollectionServiceBase<Department> {\r\n  readonly pageSize = environment.pageSize;\r\n  public departmentForm: FormGroup;\r\n  private server = environment.serverURL;\r\n  departments$: Observable<Department[]>;\r\n  teams$: Observable<Team[]>;\r\n  teamLoading = false;\r\n  teamInput$ = new Subject<string>();\r\n  selectedFile?: FileList;\r\n  pagination$: Observable<Pagination>;\r\n  submitted: boolean = false;\r\n  isLoading: boolean = false\r\n  FileRemoved: boolean | number = false;\r\n  uploadedFile?: { id: number, url: string };\r\n  page: number = 1;\r\n  lastSearchedParams;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    public MediasService: mediasService,\r\n    private toast: HotToastService,\r\n    private http: HttpClient\r\n  ) {\r\n    super(\"departments\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n\r\n\r\n  loadTeams(defaultVal = []) : void{\r\n    this.teams$ = concat(\r\n      of(defaultVal), // default items\r\n      this.teamInput$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          filter((val) => val != null),\r\n          tap(() => this.teamLoading = true),\r\n          switchMap(term => \r\n            this.http.get<Team[]>(`${this.server}/api/teams?properties[]=id&properties[]=titre&titre=`+term)\r\n            .pipe(\r\n              map(response => response[\"hydra:member\"]),\r\n              catchError(() => of([])), // empty list on error\r\n              tap(() => this.teamLoading = false)\r\n            )\r\n          )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id department id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"Départ supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.departmentForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * Persist : Create\r\n   */\r\n  onCreate(): void {\r\n    let form = this.departmentForm;\r\n    this.submitted = true;\r\n    if (form.invalid) return;\r\n    this.submitted = false;\r\n    this.isLoading = true;\r\n    let toast = this.toast;\r\n    let observable: Observable<Department>;\r\n    let _this = this;\r\n    let obj = Object.entries(form.value as Department);\r\n    // remove empty values\r\n    const department = Object.fromEntries(obj.filter(([key, value]) => value !== \"\"));\r\n    // if has attachment add new observable to upload the file\r\n    if (this.selectedFile) {\r\n      // upload the attach file id to department\r\n      observable = this.MediasService.Upload(this.selectedFile[0]).pipe(\r\n        switchMap(response => {\r\n          department.visuel = response[\"@id\"];\r\n          return this.add(department);\r\n        }),\r\n      );\r\n    } else {\r\n      observable = this.add(department);\r\n    }\r\n\r\n    // subscribe\r\n    observable.subscribe({\r\n      error: () => {\r\n        _this.isLoading = false;\r\n        toast.error(\"un problème est survenu, veuillez réessayer\")\r\n      },\r\n      complete() {\r\n        form.reset();\r\n        _this.isLoading = false;\r\n        _this.selectedFile = null;\r\n        toast.success(\"Départ ajouté avec succès\");\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * Persist : update\r\n   */\r\n  onUpdate(id: number): void {\r\n    let form = this.departmentForm;\r\n    this.submitted = true;\r\n    if (form.invalid) return;\r\n    this.submitted = false;\r\n    this.isLoading = true;\r\n    let _this = this;\r\n    let toast = this.toast;\r\n    let observables = [];\r\n    let obj = Object.entries(form.value as Department);\r\n    // remove empty values\r\n    const department = Object.fromEntries(obj.filter(([key, value]) => value !== \"\"));\r\n    department.id = id;\r\n    this.FileRemoved !== false && (department.visuel = null);\r\n    // x if added (for first time just add it id)\r\n    // if updated remove the old one and update the id\r\n    // if removed remove it id and delete it from server\r\n\r\n    // if has attachment add new observable to upload the file\r\n    if (this.selectedFile) {\r\n      this.isLoading = true;\r\n      // upload the attach file id to department\r\n      observables.push(\r\n        this.MediasService.Upload(this.selectedFile[0]).pipe(\r\n          switchMap(obj => {\r\n            this.uploadedFile = { id: obj.id, url: obj.contentUrl };\r\n            this.selectedFile = null;\r\n            this.FileRemoved = false;\r\n            department.visuel = obj[\"@id\"];\r\n            return this.update(department);\r\n          }),\r\n        ));\r\n    } else {\r\n      observables.push(this.update(department))\r\n    }\r\n\r\n\r\n    // subscribe\r\n    forkJoin(observables).subscribe({\r\n      error: () => {\r\n        _this.isLoading = false;\r\n        toast.error(\"un problème est survenu, veuillez réessayer\")\r\n      },\r\n      complete() {\r\n        if (_this.FileRemoved !== false) {\r\n          _this.MediasService.delete(_this.FileRemoved as number).subscribe(() => {\r\n            _this.isLoading = false;\r\n            toast.success(\"Départ a été mis à jour avec succès\");\r\n          })\r\n        } else {\r\n          _this.isLoading = false;\r\n          toast.success(\"Départ a été mis à jour avec succès\");\r\n        }\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  get titre() {\r\n    return this.departmentForm.get(\"titre\");\r\n  }\r\n  get visuel() {\r\n    return this.departmentForm.get(\"visuel\");\r\n  }\r\n  get team() {\r\n    return this.departmentForm.get(\"team\");\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.departments$ = of([]); // clear table\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.departments$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { GoalGroup, Pagination } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class goalGroupService extends EntityCollectionServiceBase<GoalGroup> {\r\n  readonly pageSize = environment.pageSize;\r\n  public goalGroupForm: FormGroup;\r\n  goalGroups$: Observable<GoalGroup[]>;\r\n  pagination$: Observable<Pagination>;\r\n  persistence: boolean | number = false;\r\n  submitted: boolean = false;\r\n  page: number = 1;\r\n  lastSearchedParams;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private toast: HotToastService,\r\n  ) {\r\n    super(\"goal_groups\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n\r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id goal_groups id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"Groupe supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.goalGroupForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * Persist : Save\r\n   */\r\n  onSave(): void {\r\n    let form = this.goalGroupForm;\r\n    this.submitted = true;\r\n    if (form.invalid) return;\r\n    let toast = this.toast;\r\n    let _this = this;\r\n    let observable: Observable<GoalGroup>;\r\n    if (this.persistence === false) {\r\n      let goalGroup = form.value as GoalGroup;\r\n      observable = this.add(goalGroup);\r\n    } else {\r\n      let goalGroup:GoalGroup = { ...form.value };\r\n      goalGroup.id = this.persistence as number;\r\n      observable = this.update(goalGroup);\r\n    }\r\n    observable.subscribe({\r\n      error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n      complete() {\r\n        form.reset();\r\n        _this.findByCriteria({ page: 1, ..._this.lastSearchedParams });\r\n        toast.success(`Groupe a été ${_this.persistence === false ? 'ajouté' : 'mis à jour'} avec succès`);\r\n        _this.persistence = false;\r\n        _this.submitted = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle update\r\n   */\r\n  onUpdate(id: number, name: string, displayInForms : boolean): void {\r\n    this.persistence = id;\r\n    this.goalGroupForm.patchValue({\r\n      name: name,\r\n      displayInForms: displayInForms,\r\n    });\r\n  }\r\n\r\n  get name() {\r\n    return this.goalGroupForm.get(\"name\");\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.goalGroups$ = of([]); // clear table\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.goalGroups$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { concat, Observable, of, Subject } from \"rxjs\";\r\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { Goal, GoalGroup, Pagination } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { departmentService } from \"../departments/department.service\";\r\nimport { goalGroupService } from \"../goal-groups/goal-group.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class goalService extends EntityCollectionServiceBase<Goal> {\r\n  readonly pageSize = environment.pageSize;\r\n  goals$: Observable<Goal[]>;\r\n\r\n  goalGroups$: Observable<GoalGroup[]>;\r\n  goalGroupLoading = false;\r\n  goalGroupInput$ = new Subject<string>();\r\n\r\n  pagination$: Observable<Pagination>;\r\n  submitted: boolean = false;\r\n  page:number = 1;\r\n  lastSearchedParams;\r\n  public goalForm: FormGroup;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    public departmentService: departmentService,\r\n    public goalGroupService: goalGroupService,\r\n    private toast: HotToastService\r\n  ) {\r\n    super(\"goals\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n  \r\n  loadGoalGroups(defaultVal = []): void {\r\n    this.goalGroups$ = concat(\r\n      of(defaultVal), // default items\r\n      this.goalGroupInput$.pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        filter((val) => val != null),\r\n        tap(() => this.goalGroupLoading = true),\r\n        switchMap(term => this.goalGroupService.getWithQuery(\"name=\"+term).pipe(\r\n          catchError(() => of([])), // empty list on error\r\n          tap(() => this.goalGroupLoading = false)\r\n        ))\r\n      )\r\n    );\r\n  }\r\n \r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    // console.log(\"getPagination\")\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id goal id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"L'équipe supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.goalForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * Persist : Create\r\n   */\r\n  onCreate(): void {\r\n    let goalForm = this.goalForm;\r\n    this.submitted = true;\r\n    if (goalForm.invalid) return;\r\n    this.submitted = false;\r\n    let toast = this.toast;\r\n    let goal = goalForm.value as Goal;\r\n    console.log(goal);\r\n    \r\n    this.add(goal).subscribe({\r\n      error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n      complete() {\r\n        goalForm.reset();\r\n        toast.success(\"L'équipe ajouté avec succès\");\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * Persist : update\r\n   */\r\n  onUpdate(id:number): void {\r\n    let goalForm = this.goalForm;\r\n    this.submitted = true;\r\n    if (goalForm.invalid) return;\r\n    this.submitted = false;\r\n\r\n    let toast = this.toast;\r\n    let goal:Goal = {...goalForm.value};\r\n    goal.id = id;\r\n      this.update(goal).subscribe({\r\n        error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n        complete() {\r\n          toast.success(\"L'équipe a été mis à jour avec succès\");\r\n        },\r\n      });\r\n  }\r\n\r\n  get name() {\r\n    return this.goalForm.get(\"name\");\r\n  }\r\n  get targetAchievement() {\r\n    return this.goalForm.get(\"targetAchievement\");\r\n  }\r\n  get goalGroup() {\r\n    return this.goalForm.get(\"goalGroup\");\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.goals$ = of([]); // clear table\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.goals$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Media } from \"src/app/core/models\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class mediasService extends EntityCollectionServiceBase<Media> {\r\n  private server = environment.serverURL;\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private http: HttpClient,\r\n  ) {\r\n    super(\"media_objects\", serviceElementsFactory);\r\n  }\r\n\r\n\r\n  Upload(attachment:File) : Observable<any>{\r\n    let url = `${this.server}/api/media_objects`;\r\n    let body: FormData = new FormData();\r\n    body.append(\"file\", attachment, attachment.name);\r\n    return this.http.post(\r\n      url,\r\n      body,\r\n      {\r\n        reportProgress: true,\r\n        responseType: 'json'\r\n      }\r\n    ).pipe();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}