{"version":3,"file":"src_app_pages_users_user_module_ts.js","mappings":"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","sources":["./src/app/core/guards/role.guard.ts","./src/app/pages/users/user-create/user-create.component.ts","./src/app/pages/users/user-create/user-create.component.html","./src/app/pages/users/user-details/user-details.component.ts","./src/app/pages/users/user-details/user-details.component.html","./src/app/pages/users/user-profile/user-profile.component.ts","./src/app/pages/users/user-profile/user-profile.component.html","./src/app/pages/users/user-routing.module.ts","./src/app/pages/users/user-update/user-update.component.ts","./src/app/pages/users/user-update/user-update.component.html","./src/app/pages/users/user.module.ts","./src/app/pages/users/user.service.ts","./src/app/pages/users/users-list/users-list.component.ts","./src/app/pages/users/users-list/users-list.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoleGuard implements CanActivate {\r\n    constructor(private router: Router, private authService: AuthenticationService) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        let authorized = this.authService.isAuthorized(route.data.access);\r\n        if(authorized) return true;\r\n        alert(\"accès refusé\");\r\n        this.router.navigate(['/dashboard']);\r\n        return false;\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { UserService } from \"../user.service\";\r\n@Component({\r\n  selector: \"app-user-create\",\r\n  templateUrl: \"./user-create.component.html\",\r\n})\r\nexport class UserCreateComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  \r\n  constructor(private fb: FormBuilder, public userService: UserService) {\r\n    this.breadCrumbItems = [{ label: 'Utilisateurs' }, { label: 'Nouvel utilisateur', active: true }];\r\n    userService.loadTeams();\r\n\r\n    userService.userForm = this.fb.group({\r\n      fullName: [\"\", Validators.required],\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n      roles: [\"\", Validators.required],\r\n      team: [\"\"],\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <!-- start page title -->\r\n  <app-page-title\r\n    title=\"Nouvel utilisateur\"\r\n    [Loading]=\"userService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n  ></app-page-title>\r\n  <!-- end page title -->\r\n\r\n  <form class=\"row mt-4\" [formGroup]=\"userService.userForm\" (ngSubmit)=\"userService.onCreate()\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"name-input\" class=\"col-md-2 col-form-label\">Nom</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"fullName\"\r\n                [ngClass]=\"{'is-invalid':userService.fullName.invalid && userService.submitted}\"\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                id=\"name-input\"\r\n              />\r\n              <div\r\n                *ngIf=\"userService.submitted && userService.fullName.errors\"\r\n                class=\"invalid-feedback\">\r\n                <span *ngIf=\"userService.fullName.errors.required\">Ce champ est obligatoire.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"text-input\" class=\"col-md-2 col-form-label\"\r\n              >Matricule</label\r\n            >\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                [ngClass]=\"{'is-invalid':userService.username.invalid && userService.submitted}\"\r\n                formControlName=\"username\"\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                id=\"text-input\"\r\n              />\r\n              <div\r\n                *ngIf=\"userService.submitted && userService.username.errors\"\r\n                class=\"invalid-feedback\">\r\n                <span *ngIf=\"userService.username.errors.required\">Ce champ est obligatoire.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"password-input\" class=\"col-md-2 col-form-label\"\r\n              >Mot de passe</label\r\n            >\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                class=\"form-control\"\r\n                [ngClass]=\"{'is-invalid':userService.password.invalid && userService.submitted}\"\r\n                type=\"password\"\r\n                formControlName=\"password\"\r\n                id=\"password-input\"\r\n              />\r\n              <div\r\n                *ngIf=\"userService.submitted && userService.password.errors\"\r\n                class=\"invalid-feedback\">\r\n                <span *ngIf=\"userService.password.errors.required\">Ce champ est obligatoire.</span>\r\n                <span *ngIf=\"userService.password.errors.minlength\">Le mot de passe doit comporter au moins 6 caractères.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"name-input\" class=\"col-md-2 col-form-label\">Équipe</label>\r\n            <div class=\"col-md-10\">\r\n              <ng-select [items]=\"userService.teams$ | async\"\r\n                        formControlName=\"team\"\r\n                        bindLabel=\"titre\"\r\n                        bindValue=\"@id\"\r\n                        [minTermLength]=\"2\"\r\n                        [loading]=\"userService.teamLoading\"\r\n                        typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                        [typeahead]=\"userService.teamInput$\">\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3 row\">\r\n            <div class=\"col-12\">\r\n              <h5 \r\n                class=\"font-size-14\"\r\n                [ngClass]=\"{ 'is-invalid': userService.roles.invalid && userService.submitted }\">Rôle</h5>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  formControlName=\"roles\"\r\n                  id=\"role1\"\r\n                  value=\"ROLE_SUPER_ADMIN\"\r\n                />\r\n                <label class=\"form-check-label\" for=\"role1\">\r\n                  Super Admin\r\n                </label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  formControlName=\"roles\"\r\n                  id=\"role2\"\r\n                  value=\"ROLE_ADMIN\"\r\n                />\r\n                <label class=\"form-check-label\" for=\"role2\">Admin</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  formControlName=\"roles\"\r\n                  id=\"role3\"\r\n                  value=\"ROLE_USER\"\r\n                />\r\n                <label class=\"form-check-label\" for=\"role3\">User</label>\r\n              </div>\r\n              <div\r\n                *ngIf=\"userService.roles.invalid && userService.submitted\"\r\n                class=\"invalid-feedback\">\r\n                <span *ngIf=\"userService.roles.errors.required\">Ce champ est obligatoire.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row justify-content-end\">\r\n            <div class=\"col-auto\">\r\n              <button class=\"btn btn-light me-2\" routerLink=\"/users\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n              <button class=\"btn btn-primary\"><i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"userService.loading$ | async\"></i> Ajouter</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end col -->\r\n  </form>\r\n  <!-- end row -->\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { User } from 'src/app/core/models';\r\nimport { AuthenticationService } from 'src/app/core/services/auth.service';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n})\r\nexport class UserDetailsComponent {\r\n  user:User;\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(\r\n    public authService: AuthenticationService,\r\n    private route: ActivatedRoute,\r\n    public userService: UserService\r\n    ) { \r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    userService.getByKey(id).subscribe(obj => this.user = obj);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title\r\n      title=\"Détails de l'utilisateur\"\r\n      [Loading]=\"userService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-body pt-5\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-nowrap mb-0\">\r\n            <tbody *ngIf=\"user\">\r\n              <tr>\r\n                <th scope=\"row\">Nom :</th>\r\n                <td>{{user.fullName}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Matricule :</th>\r\n                <td>{{user.username}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Rôle :</th>\r\n                <td>{{user?.roles | replace : '_' : ' '}}</td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Équipe :</th>\r\n                <td>\r\n                  <a \r\n                      *ngIf=\"user.team\"\r\n                      [routerLink]=\"authService.isAuthorized('teams_details') ? ['/teams/details', user.team.id] : null\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\">{{user.team.titre}}</a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button class=\"btn btn-light mt-4 float-end\" routerLink=\"/users\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  ","import { Component } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n})\r\nexport class UserProfileComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  id: number;\r\n\r\n  constructor(private route: ActivatedRoute, public userService: UserService) {\r\n    this.breadCrumbItems = [{ label: 'Utilisateurs' }, { label: 'Profile', active: true }];\r\n    this.id = JSON.parse(localStorage.getItem(\"currentUser\")).id;\r\n\r\n\r\n    userService.userForm = new FormGroup(\r\n      {\r\n        fullName: new FormControl('', Validators.required),\r\n        username: new FormControl('', Validators.required),\r\n        roles: new FormControl('', Validators.required),\r\n        team: new FormControl(\"\"),\r\n        password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n        confirmPassword: new FormControl('', [Validators.required]),\r\n      },\r\n      [CustomValidators.MatchValidator('password', 'confirmPassword')]\r\n    );\r\n\r\n    this.userService.getByKey(this.id).subscribe((usr) => {\r\n      userService.loadTeams([usr.team]);\r\n      userService.userForm.patchValue({\r\n        fullName: usr.fullName,\r\n        username: usr.username,\r\n        roles: usr.roles.join(''),\r\n        team: usr.team ? usr.team[\"@id\"] : null,\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport class CustomValidators {\r\n  static MatchValidator(source: string, target: string): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const sourceCtrl = control.get(source);\r\n      const targetCtrl = control.get(target);\r\n\r\n      return sourceCtrl && targetCtrl && sourceCtrl.value !== targetCtrl.value\r\n        ? { mismatch: true }\r\n        : null;\r\n    };\r\n  }\r\n}","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title\r\n      title=\"Profile\"\r\n      [Loading]=\"userService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n  \r\n    <form class=\"row mt-4\" [formGroup]=\"userService.userForm\" (ngSubmit)=\"userService.onUpdate(id)\">\r\n      <fieldset class=\"col-12\" [disabled]=\"userService.loading$ | async\">\r\n        <div class=\"card card-body\">\r\n          <div class=\"row\">\r\n\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"name-input\" class=\"col-md-2 col-form-label\">Nom</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"fullName\"\r\n                  [ngClass]=\"{'is-invalid':userService.fullName.invalid && userService.submitted}\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"name-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"userService.submitted && userService.fullName.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.fullName.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"text-input\" class=\"col-md-2 col-form-label\"\r\n                >Matricule</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  [ngClass]=\"{'is-invalid':userService.username.invalid && userService.submitted}\"\r\n                  formControlName=\"username\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"text-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"userService.submitted && userService.username.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.username.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"password-input\" class=\"col-md-2 col-form-label\"\r\n                >Mot de passe</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  class=\"form-control\"\r\n                  [ngClass]=\"{'is-invalid':userService.password.invalid && userService.submitted}\"\r\n                  type=\"password\"\r\n                  formControlName=\"password\"\r\n                  id=\"password-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"userService.submitted && userService.password.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.password.errors.required\">Ce champ est obligatoire.</span>\r\n                  <span *ngIf=\"userService.password.errors.minlength\">Le mot de passe doit comporter au moins 6 caractères.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"password-input\" class=\"col-md-2 col-form-label\"\r\n                >Confirmation du mot de passe</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  class=\"form-control\"\r\n                  [ngClass]=\"{'is-invalid':userService.password.invalid && userService.submitted}\"\r\n                  type=\"password\"\r\n                  formControlName=\"password\"\r\n                  id=\"password-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"userService.submitted && userService.password.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.password.errors.required\">Ce champ est obligatoire.</span>\r\n                  <span *ngIf=\"userService.password.errors.minlength\">Le mot de passe doit comporter au moins 6 caractères.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- <div class=\"mb-3 row\">\r\n              <div class=\"col-12\">\r\n                <h5 \r\n                  class=\"font-size-14\"\r\n                  [ngClass]=\"{ 'is-invalid': userService.roles.invalid && userService.submitted }\">Rôle</h5>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    formControlName=\"roles\"\r\n                    id=\"role1\"\r\n                    value=\"ROLE_SUPER_ADMIN\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"role1\">\r\n                    Super Admin\r\n                  </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    formControlName=\"roles\"\r\n                    id=\"role2\"\r\n                    value=\"ROLE_ADMIN\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"role2\">Admin</label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    formControlName=\"roles\"\r\n                    id=\"role3\"\r\n                    value=\"ROLE_USER\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"role3\">User</label>\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userService.roles.invalid && userService.submitted\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.roles.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n  \r\n            <div class=\"row justify-content-end\">\r\n              <div class=\"col-auto\">\r\n                <button class=\"btn btn-light me-2\" routerLink=\"/users\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n                <button class=\"btn btn-primary\"><i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"userService.submitted && (userService.loading$ | async)\"></i> Sauvegarder</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <!-- end col -->\r\n    </form>\r\n    <!-- end row -->\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleGuard } from 'src/app/core/guards/role.guard';\r\nimport { UserCreateComponent } from './user-create/user-create.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { UserUpdateComponent } from './user-update/user-update.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: UsersListComponent, canActivate: [RoleGuard], data: {access: 'users_show'}},\r\n  {path: 'add', component: UserCreateComponent, canActivate: [RoleGuard], data: {access: 'users_add'}},\r\n  {path: 'profile', component: UserProfileComponent, canActivate: [RoleGuard], data: {access: 'users_profile'}},\r\n  {path: 'update/:id', component: UserUpdateComponent, canActivate: [RoleGuard], data: {access: 'users_update'}},\r\n  {path: 'details/:id', component: UserDetailsComponent, canActivate: [RoleGuard], data: {access: 'users_details'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {  FormBuilder, Validators } from '@angular/forms';\r\nimport { UserService } from '../user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-update',\r\n  templateUrl: './user-update.component.html',\r\n})\r\nexport class UserUpdateComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  id: number;\r\n\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, public userService: UserService) { \r\n    this.breadCrumbItems = [{ label: 'Utilisateurs' }, { label: 'Mettre à jour l\\'utilisateur', active: true }];\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n\r\n    userService.userForm = this.fb.group({\r\n      fullName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      roles: ['', Validators.required],\r\n      team: [\"\"],\r\n    });\r\n    this.userService.getByKey(this.id).subscribe((usr) => {\r\n      userService.loadTeams([usr.team]);\r\n      userService.userForm.setValue({\r\n        fullName : usr.fullName,\r\n        username : usr.username,\r\n        password : \"\",\r\n        roles : usr.roles.join(''),\r\n        team: usr.team ? usr.team[\"@id\"] : null,\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title\r\n      title=\"Mettre à jour l'utilisateur\"\r\n      [Loading]=\"userService.loading$ | async\"\r\n      [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n  \r\n    <form class=\"row mt-4\" [formGroup]=\"userService.userForm\" (ngSubmit)=\"userService.onUpdate(id)\">\r\n      <fieldset class=\"col-12\" [disabled]=\"userService.loading$ | async\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"name-input\" class=\"col-md-2 col-form-label\">Nom</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"fullName\"\r\n                  [ngClass]=\"{'is-invalid':userService.fullName.invalid && userService.submitted}\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"name-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"userService.submitted && userService.fullName.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.fullName.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"text-input\" class=\"col-md-2 col-form-label\"\r\n                >Matricule</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  [ngClass]=\"{'is-invalid':userService.username.invalid && userService.submitted}\"\r\n                  formControlName=\"username\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"text-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"userService.submitted && userService.username.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.username.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"mb-3 row\">\r\n              <label for=\"password-input\" class=\"col-md-2 col-form-label\"\r\n                >Mot de passe</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  class=\"form-control\"\r\n                  [ngClass]=\"{'is-invalid':userService.password.invalid && userService.submitted}\"\r\n                  type=\"password\"\r\n                  formControlName=\"password\"\r\n                  id=\"password-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"userService.submitted && userService.password.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.password.errors.required\">Ce champ est obligatoire.</span>\r\n                  <span *ngIf=\"userService.password.errors.minlength\">Le mot de passe doit comporter au moins 6 caractères.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"name-input\" class=\"col-md-2 col-form-label\">Équipe</label>\r\n              <div class=\"col-md-10\">\r\n                <ng-select [items]=\"userService.teams$ | async\"\r\n                        formControlName=\"team\"\r\n                        bindLabel=\"titre\"\r\n                        bindValue=\"@id\"\r\n                        [minTermLength]=\"2\"\r\n                        [loading]=\"userService.teamLoading\"\r\n                        typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                        [typeahead]=\"userService.teamInput$\">\r\n                </ng-select>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"mb-3 row\">\r\n              <div class=\"col-12\">\r\n                <h5 \r\n                  class=\"font-size-14\"\r\n                  [ngClass]=\"{ 'is-invalid': userService.roles.invalid && userService.submitted }\">Rôle</h5>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    formControlName=\"roles\"\r\n                    id=\"role1\"\r\n                    value=\"ROLE_SUPER_ADMIN\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"role1\">\r\n                    Super Admin\r\n                  </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    formControlName=\"roles\"\r\n                    id=\"role2\"\r\n                    value=\"ROLE_ADMIN\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"role2\">Admin</label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    formControlName=\"roles\"\r\n                    id=\"role3\"\r\n                    value=\"ROLE_USER\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"role3\">User</label>\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userService.roles.invalid && userService.submitted\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"userService.roles.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"row justify-content-end\">\r\n              <div class=\"col-auto\">\r\n                <button class=\"btn btn-light me-2\" routerLink=\"/users\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n                <button class=\"btn btn-primary\"><i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"userService.submitted && (userService.loading$ | async)\"></i> Sauvegarder</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <!-- end col -->\r\n    </form>\r\n    <!-- end row -->\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\r\n\r\n// import { UIModule } from 'src/app/shared/ui/ui.module';\r\nimport { UserRoutingModule } from './user-routing.module';\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { UserCreateComponent } from './user-create/user-create.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { UserUpdateComponent } from './user-update/user-update.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\nimport { ReplacePipe } from 'src/app/core/pipes';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\n// import { ReplacePipe } from 'src/app/core/pipes';\r\n\r\n@NgModule({\r\n  imports: [\r\n    UserRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    UsersListComponent,\r\n    UserCreateComponent,\r\n    UserUpdateComponent,\r\n    UserDetailsComponent,\r\n    UserProfileComponent,\r\n    ReplacePipe,\r\n  ],\r\n})\r\nexport class userModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from \"@ngrx/data\";\r\nimport { concat, Observable, of, Subject } from \"rxjs\";\r\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { Pagination, Team, User } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService extends EntityCollectionServiceBase<User> {\r\n  readonly pageSize = environment.pageSize;\r\n  private server = environment.serverURL;\r\n  teams$: Observable<Team[]>;\r\n  teamLoading = false;\r\n  teamInput$ = new Subject<string>();\r\n  users$: Observable<User[]>;\r\n  pagination$: Observable<Pagination>;\r\n  submitted: boolean = false;\r\n  page:number = 1;\r\n  lastSearchedParams;\r\n  public userForm: FormGroup;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private http: HttpClient,\r\n    private toast: HotToastService\r\n  ) {\r\n    super(\"users\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n\r\n  loadTeams(defaultVal = []) : void{\r\n    this.teams$ = concat(\r\n      of(defaultVal), // default items\r\n      this.teamInput$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          filter((val) => val != null),\r\n          tap(() => this.teamLoading = true),\r\n          switchMap(term => \r\n            this.http.get<Team[]>(`${this.server}/api/teams?properties[]=id&properties[]=titre&titre=`+term)\r\n            .pipe(\r\n              map(response => response[\"hydra:member\"]),\r\n              catchError(() => of([])), // empty list on error\r\n              tap(() => this.teamLoading = false)\r\n            )\r\n          )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    // console.log(\"getPagination\")\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id user id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"Utilisateur supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.userForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * Persist : Create\r\n   */\r\n  onCreate(): void {\r\n    let userForm = this.userForm;\r\n    this.submitted = true;\r\n    if (userForm.invalid) return;\r\n    this.submitted = false;\r\n    let toast = this.toast;\r\n    let obj = Object.entries(userForm.value as User);\r\n    // remove empty values\r\n    const user = Object.fromEntries(obj.filter(([key, value]) => value !== \"\"));\r\n    user.roles = [user.roles.toString()];\r\n    this.add(user).subscribe({\r\n      error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n      complete() {\r\n        userForm.reset();\r\n        toast.success(\"Utilisateur ajouté avec succès\");\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * Persist : update\r\n   */\r\n  onUpdate(id:number): void {\r\n    let userForm = this.userForm;\r\n    this.submitted = true;\r\n    if (userForm.invalid) return;\r\n    this.submitted = false;\r\n\r\n    let toast = this.toast;\r\n    let user:User = {...userForm.value};\r\n    user.id = id;\r\n    user.roles = [user.roles.toString()];\r\n      this.update(user).subscribe({\r\n        error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n        complete() {\r\n          toast.success(\"L'utilisateur a été mis à jour avec succès\");\r\n        },\r\n      });\r\n  }\r\n  get fullName() {\r\n    return this.userForm.get(\"fullName\");\r\n  }\r\n  get username() {\r\n    return this.userForm.get(\"username\");\r\n  }\r\n  get password() {\r\n    return this.userForm.get(\"password\");\r\n  }\r\n  get roles() {\r\n    return this.userForm.get(\"roles\");\r\n  }\r\n  get team() {\r\n    return this.userForm.get(\"team\");\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.users$ = of([]); // clear table\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.users$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { UserService } from \"../user.service\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { AuthenticationService } from \"src/app/core/services/auth.service\";\r\nimport { NgSelectConfig } from \"@ng-select/ng-select\";\r\n\r\n@Component({\r\n  selector: \"app-users-list\",\r\n  templateUrl: \"./users-list.component.html\",\r\n})\r\nexport class UsersListComponent {\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(\r\n    public userService: UserService,\r\n    private fb: FormBuilder,\r\n    private config: NgSelectConfig,\r\n    public authService: AuthenticationService\r\n  ) {\r\n    this.userService.findAll();\r\n    userService.loadTeams();\r\n    userService.userForm = this.fb.group({\r\n      fullName: [\"\"],\r\n      username: [\"\"],\r\n      roles: [\"\"],\r\n      \"team.id[]\": [\"\"],\r\n    });\r\n\r\n    config.notFoundText = \"Aucune donnée trouvée !\";\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row align-items-center justify-content-between mb-4\">\r\n    <div class=\"col-auto\">\r\n      <app-page-title\r\n        title=\"Utilisateurs\"\r\n        [breadcrumbItems]=\"breadCrumbItems\"\r\n      ></app-page-title>\r\n    </div>\r\n    <div class=\"col-auto\">\r\n      <a routerLink=\"/users/add\" class=\"btn btn-primary ms-2\"\r\n      *ngIf=\"authService.isAuthorized('users_add')\"\r\n        ><i class=\"fas fa-plus-circle\"></i> Ajouter</a\r\n      >\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <!-- Table -->\r\n          <form [formGroup]=\"userService.userForm\" (ngSubmit)=\"userService.onSearch()\" class=\"table-responsive\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"22%\">Matricule</th>\r\n                  <th width=\"22%\">Nom</th>\r\n                  <th width=\"22%\">Rôle</th>\r\n                  <th width=\"22%\">Équipe</th>\r\n                  <th width=\"123px\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr valign=\"middle\" \r\n                >\r\n                  <td><input type=\"text\" placeholder=\"Matricule...\" formControlName=\"username\" #searchUsername class=\"form-control\"></td>\r\n                  <td><input type=\"text\" placeholder=\"Nom...\" formControlName=\"fullName\" #searchFullName class=\"form-control\"></td>\r\n                  <td>\r\n                    <select class=\"form-select\"\r\n                      formControlName=\"roles\" #searchRoles>\r\n                      <option value=\"\" selected>Rôle...</option>\r\n                      <option value=\"ROLE_USER\">USER</option>\r\n                      <option value=\"ROLE_ADMIN\">ADMIN</option>\r\n                      <option value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                  <ng-select [items]=\"userService.teams$ | async\"\r\n                            #searchTeam\r\n                            formControlName=\"team.id[]\"\r\n                            bindLabel=\"titre\"\r\n                            bindValue=\"id\"\r\n                            [multiple]=\"true\"\r\n                            \r\n                            [minTermLength]=\"2\"\r\n                            placeholder=\"Équipe..\"\r\n                            [loading]=\"userService.teamLoading\"\r\n                            typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                            [typeahead]=\"userService.teamInput$\">\r\n                  </ng-select>\r\n                  </td>\r\n                  <td>\r\n                    <button type=\"submit\" class=\"btn btn-sm btn-primary d-flex align-items-center\">\r\n                      <i class=\"bx bx-search me-1\"></i>Rechercher\r\n                    </button>\r\n                    <button type=\"reset\" class=\"btn btn-sm text-primary flex align-items-center\" (click)=\"userService.findAll()\">\r\n                      <i class=\"bx bx-x me-1\"></i>Réinitialiser\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"5\"\r\n                    *ngIf=\"!(userService.users$ | async) && userService.loading$ | async\"\r\n                  >\r\n                    Chargement...\r\n                  </td>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"5\"\r\n                    *ngIf=\"(userService.users$ | async) && (userService.users$ | async).length === 0 && userService.loaded$ | async\"\r\n                  >\r\n                  Aucune donnée trouvée !\r\n                  </td>\r\n                </tr>\r\n                <tr *ngFor=\"let user of (userService.users$ | async); let i = index\">\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"user.username\"\r\n                      [term]=\"searchUsername.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"user.fullName\"\r\n                      [term]=\"searchFullName.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"user.roles | replace : '_' : ' '\"\r\n                      [term]=\"searchRoles.options[searchRoles.options.selectedIndex].text\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <a \r\n                      *ngIf=\"user.team\"\r\n                      [routerLink]=\"authService.isAuthorized('teams_details') ? ['/teams/details', user.team.id] : null\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\">{{user.team.titre}}</a>\r\n                  </td>\r\n                  <td align=\"center\">\r\n                    <div ngbDropdown \r\n                      placement=\"bottom-left\"\r\n                      *ngIf=\"authService.isAuthorized('users_details') || authService.isAuthorized('users_update') || authService.isAuthorized('users_delete')\"\r\n                      >\r\n                      <i\r\n                        class=\"fas fa-ellipsis-h dropdown-toggle c-pointer\"\r\n                        ngbDropdownToggle\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"true\"\r\n                      ></i>\r\n                      <div\r\n                        class=\"dropdown-menu dropdown-menu-end\"\r\n                        ngbDropdownMenu\r\n                      >\r\n                        <a class=\"dropdown-item\"\r\n                          [routerLink]=\"['details', user.id]\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('users_details')\"\r\n                          >\r\n                          <i class=\"fas fa-eye me-2\"></i> Voir\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('users_update')\"\r\n                          [routerLink]=\"['update', user.id]\"\r\n                          >\r\n                          <!-- skipLocationChange -->\r\n                          <i class=\"fas fa-edit me-2\"></i> Modifier\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item text-danger\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('users_delete')\"\r\n                          (click)=\"userService.deleteItem(user.id, $event.target)\"\r\n                        >\r\n                          <i class=\"fas fa-trash me-2\"></i> Supprimer\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <!-- End table -->\r\n          <!-- Pagination -->\r\n          <ng-container *ngIf=\"(userService.pagination$ | async) as pagination\">\r\n            <div\r\n              *ngIf=\"pagination.totalRecords > userService.pageSize\"\r\n              class=\"row justify-content-md-between align-items-md-center mt-2\"\r\n            >\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div\r\n                  class=\"dataTables_info mb-2\"\r\n                  id=\"tickets-table_info\"\r\n                  role=\"status\"\r\n                  aria-live=\"polite\"\r\n                >\r\n                Affichage de {{pagination.startIndex}} \r\n                à {{pagination.endIndex}} \r\n                de {{pagination.totalRecords}} entrées\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div class=\"text-md-right float-md-end pagination-rounded\">\r\n                  <ngb-pagination\r\n                    [collectionSize]=\"pagination.totalRecords\"\r\n                    [(page)]=\"userService.page\"\r\n                    [pageSize]=\"userService.pageSize\"\r\n                    (pageChange)=\"userService.onPaginate($event)\" [maxSize]=\"5\" \r\n                  >\r\n                  </ngb-pagination>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <!-- End Pagination -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}