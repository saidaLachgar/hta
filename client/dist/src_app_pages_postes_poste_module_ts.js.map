{"version":3,"file":"src_app_pages_postes_poste_module_ts.js","mappings":"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","sources":["./src/app/core/guards/role.guard.ts","./src/app/pages/communes/commune.service.ts","./src/app/pages/departments/department.service.ts","./src/app/pages/medias/media.service.ts","./src/app/pages/postes/poste-create/poste-create.component.ts","./src/app/pages/postes/poste-create/poste-create.component.html","./src/app/pages/postes/poste-details/poste-details.component.ts","./src/app/pages/postes/poste-details/poste-details.component.html","./src/app/pages/postes/poste-routing.module.ts","./src/app/pages/postes/poste-update/poste-update.component.ts","./src/app/pages/postes/poste-update/poste-update.component.html","./src/app/pages/postes/poste.module.ts","./src/app/pages/postes/poste.service.ts","./src/app/pages/postes/postes-list/postes-list.component.ts","./src/app/pages/postes/postes-list/postes-list.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoleGuard implements CanActivate {\r\n    constructor(private router: Router, private authService: AuthenticationService) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        let authorized = this.authService.isAuthorized(route.data.access);\r\n        if(authorized) return true;\r\n        alert(\"accès refusé\");\r\n        this.router.navigate(['/dashboard']);\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Commune, Pagination } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class communeService extends EntityCollectionServiceBase<Commune> {\r\n  readonly pageSize = environment.pageSize;\r\n  public communeForm: FormGroup;\r\n  communes$: Observable<Commune[]>;\r\n  pagination$: Observable<Pagination>;\r\n  persistence: boolean | number = false;\r\n  submitted: boolean = false;\r\n  page: number = 1;\r\n  lastSearchedParams;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private toast: HotToastService,\r\n  ) {\r\n    super(\"communes\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n\r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id commune id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"Commune supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.communeForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * Persist : Save\r\n   */\r\n  onSave(): void {\r\n    let form = this.communeForm;\r\n    this.submitted = true;\r\n    if (form.invalid) return;\r\n    let toast = this.toast;\r\n    let _this = this;\r\n    let observable: Observable<Commune>;\r\n    if (this.persistence === false) {\r\n      let commune = form.value as Commune;\r\n      observable = this.add(commune);\r\n    } else {\r\n      let commune:Commune = { ...form.value };\r\n      commune.id = this.persistence as number;\r\n      observable = this.update(commune);\r\n    }\r\n    observable.subscribe({\r\n      error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n      complete() {\r\n        form.reset();\r\n        _this.findByCriteria({ page: 1, ..._this.lastSearchedParams });\r\n        toast.success(`Commune a été ${_this.persistence === false ? 'ajouté' : 'mis à jour'} avec succès`);\r\n        _this.persistence = false;\r\n        _this.submitted = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle update\r\n   */\r\n  onUpdate(id: number, titre: string): void {\r\n    this.persistence = id;\r\n    this.communeForm.setValue({\r\n      titre: titre,\r\n    });\r\n  }\r\n\r\n  get titre() {\r\n    return this.communeForm.get(\"titre\");\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.communes$ = of([]); // clear table\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.communes$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { concat, forkJoin, Observable, of, Subject } from \"rxjs\";\r\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { Department, Pagination, Team } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { mediasService } from \"../medias/media.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class departmentService extends EntityCollectionServiceBase<Department> {\r\n  readonly pageSize = environment.pageSize;\r\n  public departmentForm: FormGroup;\r\n  private server = environment.serverURL;\r\n  departments$: Observable<Department[]>;\r\n  teams$: Observable<Team[]>;\r\n  teamLoading = false;\r\n  teamInput$ = new Subject<string>();\r\n  selectedFile?: FileList;\r\n  pagination$: Observable<Pagination>;\r\n  submitted: boolean = false;\r\n  isLoading: boolean = false\r\n  FileRemoved: boolean | number = false;\r\n  uploadedFile?: { id: number, url: string };\r\n  page: number = 1;\r\n  lastSearchedParams;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    public MediasService: mediasService,\r\n    private toast: HotToastService,\r\n    private http: HttpClient\r\n  ) {\r\n    super(\"departments\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n\r\n\r\n  loadTeams(defaultVal = []) : void{\r\n    this.teams$ = concat(\r\n      of(defaultVal), // default items\r\n      this.teamInput$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          filter((val) => val != null),\r\n          tap(() => this.teamLoading = true),\r\n          switchMap(term => \r\n            this.http.get<Team[]>(`${this.server}/api/teams?properties[]=id&properties[]=titre&titre=`+term)\r\n            .pipe(\r\n              map(response => response[\"hydra:member\"]),\r\n              catchError(() => of([])), // empty list on error\r\n              tap(() => this.teamLoading = false)\r\n            )\r\n          )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id department id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"Départ supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.departmentForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * Persist : Create\r\n   */\r\n  onCreate(): void {\r\n    let form = this.departmentForm;\r\n    this.submitted = true;\r\n    if (form.invalid) return;\r\n    this.submitted = false;\r\n    this.isLoading = true;\r\n    let toast = this.toast;\r\n    let observable: Observable<Department>;\r\n    let _this = this;\r\n    let obj = Object.entries(form.value as Department);\r\n    // remove empty values\r\n    const department = Object.fromEntries(obj.filter(([key, value]) => value !== \"\"));\r\n    // if has attachment add new observable to upload the file\r\n    if (this.selectedFile) {\r\n      // upload the attach file id to department\r\n      observable = this.MediasService.Upload(this.selectedFile[0]).pipe(\r\n        switchMap(response => {\r\n          department.visuel = response[\"@id\"];\r\n          return this.add(department);\r\n        }),\r\n      );\r\n    } else {\r\n      observable = this.add(department);\r\n    }\r\n\r\n    // subscribe\r\n    observable.subscribe({\r\n      error: () => {\r\n        _this.isLoading = false;\r\n        toast.error(\"un problème est survenu, veuillez réessayer\")\r\n      },\r\n      complete() {\r\n        form.reset();\r\n        _this.isLoading = false;\r\n        _this.selectedFile = null;\r\n        toast.success(\"Départ ajouté avec succès\");\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * Persist : update\r\n   */\r\n  onUpdate(id: number): void {\r\n    let form = this.departmentForm;\r\n    this.submitted = true;\r\n    if (form.invalid) return;\r\n    this.submitted = false;\r\n    this.isLoading = true;\r\n    let _this = this;\r\n    let toast = this.toast;\r\n    let observables = [];\r\n    let obj = Object.entries(form.value as Department);\r\n    // remove empty values\r\n    const department = Object.fromEntries(obj.filter(([key, value]) => value !== \"\"));\r\n    department.id = id;\r\n    this.FileRemoved !== false && (department.visuel = null);\r\n    // x if added (for first time just add it id)\r\n    // if updated remove the old one and update the id\r\n    // if removed remove it id and delete it from server\r\n\r\n    // if has attachment add new observable to upload the file\r\n    if (this.selectedFile) {\r\n      this.isLoading = true;\r\n      // upload the attach file id to department\r\n      observables.push(\r\n        this.MediasService.Upload(this.selectedFile[0]).pipe(\r\n          switchMap(obj => {\r\n            this.uploadedFile = { id: obj.id, url: obj.contentUrl };\r\n            this.selectedFile = null;\r\n            this.FileRemoved = false;\r\n            department.visuel = obj[\"@id\"];\r\n            return this.update(department);\r\n          }),\r\n        ));\r\n    } else {\r\n      observables.push(this.update(department))\r\n    }\r\n\r\n\r\n    // subscribe\r\n    forkJoin(observables).subscribe({\r\n      error: () => {\r\n        _this.isLoading = false;\r\n        toast.error(\"un problème est survenu, veuillez réessayer\")\r\n      },\r\n      complete() {\r\n        if (_this.FileRemoved !== false) {\r\n          _this.MediasService.delete(_this.FileRemoved as number).subscribe(() => {\r\n            _this.isLoading = false;\r\n            toast.success(\"Départ a été mis à jour avec succès\");\r\n          })\r\n        } else {\r\n          _this.isLoading = false;\r\n          toast.success(\"Départ a été mis à jour avec succès\");\r\n        }\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  get titre() {\r\n    return this.departmentForm.get(\"titre\");\r\n  }\r\n  get visuel() {\r\n    return this.departmentForm.get(\"visuel\");\r\n  }\r\n  get team() {\r\n    return this.departmentForm.get(\"team\");\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.departments$ = of([]); // clear table\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.departments$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Media } from \"src/app/core/models\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class mediasService extends EntityCollectionServiceBase<Media> {\r\n  private server = environment.serverURL;\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private http: HttpClient,\r\n  ) {\r\n    super(\"media_objects\", serviceElementsFactory);\r\n  }\r\n\r\n\r\n  Upload(attachment:File) : Observable<any>{\r\n    let url = `${this.server}/api/media_objects`;\r\n    let body: FormData = new FormData();\r\n    body.append(\"file\", attachment, attachment.name);\r\n    return this.http.post(\r\n      url,\r\n      body,\r\n      {\r\n        reportProgress: true,\r\n        responseType: 'json'\r\n      }\r\n    ).pipe();\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { posteService } from \"../poste.service\";\r\n@Component({\r\n  selector: \"app-poste-create\",\r\n  templateUrl: \"./poste-create.component.html\",\r\n})\r\nexport class posteCreateComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  showError: boolean = false;\r\n  \r\n  constructor(private fb: FormBuilder, public posteService: posteService) {\r\n    this.breadCrumbItems = [{ label: 'Postes' }, { label: 'Nouveau poste', active: true }];\r\n    posteService.loadCommunes();\r\n    posteService.loadDepartments(false);\r\n    posteService.loadNodes();\r\n    posteService.posteForm = this.fb.group({\r\n      designation: [\"\", Validators.required],\r\n      MLE: [\"\"],\r\n      PKVA: [null],\r\n      nbClients: [null],\r\n      dateMst: [null],\r\n      department: [\"\"],\r\n      type: [\"\"],\r\n      marque: [\"\"],\r\n      poste: [\"\"],\r\n      n_serie: [\"\"],\r\n      origine: [\"\"],\r\n      node: [\"\", Validators.required],\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <!-- start page title -->\r\n  <app-page-title\r\n    title=\"Nouveau poste\"\r\n    [Loading]=\"posteService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n  ></app-page-title>\r\n  <!-- end page title -->\r\n\r\n  <form class=\"row mt-4\" [formGroup]=\"posteService.posteForm\" (ngSubmit)=\"posteService.onCreate()\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card card-body\">\r\n        <!-- <fieldset [disabled]=\"(posteService.loading$ | async) && !posteService.submitted\"> -->\r\n          \r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-3\" class=\"col-md-2 col-form-label\">Designation</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"designation\"\r\n                id=\"input-3\" \r\n                [ngClass]=\"{'is-invalid':posteService.designation.invalid && posteService.submitted}\"\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n              />\r\n              <div\r\n                *ngIf=\"posteService.submitted && posteService.designation.errors\"\r\n                class=\"invalid-feedback\">\r\n                <span *ngIf=\"posteService.designation.errors.required\">Ce champ est obligatoire.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-2\" class=\"col-md-2 col-form-label\">Départ</label>\r\n            <div class=\"col-md-10\" id=\"input-2\" >\r\n              <ng-select formControlName=\"department\" placeholder=\"Dépar..\">\r\n                <ng-option *ngFor=\"let depar of (posteService.departments$ | async)\" [value]=\"'/api/departments/'+depar.id\">{{depar.titre}}</ng-option>\r\n              </ng-select>\r\n            <div #postfeedback *ngIf=\"showError && !posteService.department.value\"\r\n                class=\"invalid-feedback d-block\">Ce champ est obligatoire.</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-1\" class=\"col-md-2 col-form-label\">Appareils coupeur</label>\r\n            <div class=\"col-md-10\" (click)=\"showError = true\" id=\"input-1\">\r\n                <ng-select [items]=\"posteService.nodes$ | async\"\r\n                          formControlName=\"node\"\r\n                          bindLabel=\"titre\"\r\n                          bindValue=\"@id\"\r\n                          [minTermLength]=\"2\"\r\n                          [readonly]=\"!posteService.department.value\"\r\n                          [loading]=\"posteService.nodeLoading\"\r\n                          [ngClass]=\"{'is-invalid':posteService.node.invalid && posteService.submitted}\"\r\n                          typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                          [typeahead]=\"posteService.nodeInput$\">\r\n                </ng-select>\r\n                <div\r\n                  *ngIf=\"posteService.submitted && posteService.node.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"posteService.node.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-4\" class=\"col-md-2 col-form-label\">MLE</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"MLE\"\r\n                id=\"input-4\" \r\n                class=\"form-control\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-5\" class=\"col-md-2 col-form-label\">P KVA</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"PKVA\"\r\n                id=\"input-5\" \r\n                class=\"form-control\"\r\n                type=\"number\"\r\n                step=\"1\" \r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-6\" class=\"col-md-2 col-form-label\">Nb de clients</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"nbClients\"\r\n                id=\"input-6\" \r\n                class=\"form-control\"\r\n                type=\"number\"\r\n                step=\"1\" \r\n                \r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-8\" class=\"col-md-2 col-form-label\">Date MST</label>\r\n            <div class=\"col-md-10\">\r\n              <div class=\"input-group clockpicker\">\r\n                <input ngbDatepicker [minDate]=\"{year: 1900, month: 1, day: 1}\" id=\"input-8\" formControlName=\"dateMst\" class=\"form-control\" (click)=\"ds.open()\" #ds=\"ngbDatepicker\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-type\" class=\"col-md-2 col-form-label\">Type</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"type\"\r\n                id=\"input-type\" \r\n                class=\"form-control\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-marque\" class=\"col-md-2 col-form-label\">Marque</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"marque\"\r\n                id=\"input-marque\" \r\n                class=\"form-control\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-poste\" class=\"col-md-2 col-form-label\">Poste</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"poste\"\r\n                id=\"input-poste\" \r\n                class=\"form-control\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-nserie\" class=\"col-md-2 col-form-label\">N° serie</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"n_serie\"\r\n                id=\"input-nserie\" \r\n                class=\"form-control\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"input-origine\" class=\"col-md-2 col-form-label\">Origine</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"origine\"\r\n                id=\"input-origine\" \r\n                class=\"form-control\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row justify-content-end\">\r\n            <div class=\"col-auto\">\r\n              <button class=\"btn btn-light me-2\" routerLink=\"/postes\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n              <button type=\"submit\" [disabled]=\"posteService.loading$ | async\" class=\"btn btn-primary\">Ajouter</button>\r\n            </div>\r\n          </div>\r\n      <!-- </fieldset> -->\r\n      </div>\r\n    </div>\r\n    <!-- end col -->\r\n  </form>\r\n  <!-- end row -->\r\n</div>","import { Component } from '@angular/core';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Poste } from 'src/app/core/models';\r\nimport { posteService } from '../poste.service';\r\n\r\n@Component({\r\n  selector: 'app-poste-details',\r\n  templateUrl: './poste-details.component.html',\r\n})\r\nexport class posteDetailsComponent {\r\n  poste: Poste;\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(private route: ActivatedRoute, public service: posteService) { \r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    service.getByKey(id).subscribe(obj => this.poste = obj);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title\r\n      title=\"Détails de la poste\"\r\n      [Loading]=\"service.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-body pt-5\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-nowrap mb-0\">\r\n            <tbody *ngIf=\"poste\">\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Designation :</th>\r\n                <td>\r\n                  {{poste.designation}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Départ :</th>\r\n                <td>\r\n                  {{poste.node && poste.node.department && poste.node.department.titre}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">MLE :</th>\r\n                <td>\r\n                  {{poste.MLE}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">P KVA :</th>\r\n                <td>\r\n                  {{poste.PKVA}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Nb de clients :</th>\r\n                <td>\r\n                  {{poste.nb_clients}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Commune :</th>\r\n                <td>\r\n                  {{poste.node && poste.node.commune && poste.node.commune.titre}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Date MST :</th>\r\n                <td>\r\n                  {{poste.date_mst | date:'shortDate'}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Type :</th>\r\n                <td>\r\n                  {{poste.type}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Marque :</th>\r\n                <td>\r\n                  {{poste.marque}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Poste :</th>\r\n                <td>\r\n                  {{poste.poste}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">N° serie :</th>\r\n                <td>\r\n                  {{poste.n_serie}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Origine :</th>\r\n                <td>\r\n                  {{poste.origine}}\r\n                </td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Puis-appelée :</th>\r\n                <td>\r\n                  {{poste.puissance}}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button class=\"btn btn-light mt-4 float-end\" routerLink=\"/postes\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleGuard } from 'src/app/core/guards/role.guard';\r\nimport { posteCreateComponent } from './poste-create/poste-create.component';\r\nimport { posteDetailsComponent } from './poste-details/poste-details.component';\r\nimport { posteUpdateComponent } from './poste-update/poste-update.component';\r\nimport { postesListComponent } from './postes-list/postes-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: postesListComponent, canActivate: [RoleGuard], data: {access: 'postes_show'}},\r\n  {path: 'add', component: posteCreateComponent, canActivate: [RoleGuard], data: {access: 'postes_add'}},\r\n  {path: 'update/:id', component: posteUpdateComponent, canActivate: [RoleGuard], data: {access: 'postes_update'}},\r\n  {path: 'details/:id', component: posteDetailsComponent, canActivate: [RoleGuard], data: {access: 'postes_details'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class posteRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { posteService } from '../poste.service';\r\n\r\n@Component({\r\n  selector: 'app-poste-update',\r\n  templateUrl: './poste-update.component.html',\r\n})\r\nexport class posteUpdateComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  id: number;\r\n  showError: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, public posteService: posteService) { \r\n    this.breadCrumbItems = [{ label: 'Postes' }, { label: 'Mettre à jour le poste', active: true }];\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    posteService.loadNodes();\r\n    posteService.loadCommunes();\r\n    posteService.loadDepartments(false);\r\n    posteService.posteForm = this.fb.group({\r\n      designation: [\"\", Validators.required],\r\n      MLE: [\"\"],\r\n      PKVA: [null],\r\n      nbClients: [null],\r\n      dateMst: [\"\"],\r\n      department: [\"\"],\r\n      type: [\"\"],\r\n      marque: [\"\"],\r\n      poste: [\"\"],\r\n      n_serie: [\"\"],\r\n      origine: [\"\"],\r\n      node: [\"\", Validators.required],\r\n    });\r\n    this.posteService.getByKey(this.id).subscribe((obj) => {\r\n      \r\n      let date = obj.date_mst?  new Date(obj.date_mst) : null;\r\n      posteService.loadNodes(obj.node ? [obj.node] : []);\r\n\r\n      posteService.posteForm.setValue({\r\n        designation : obj.designation,\r\n        MLE : obj.MLE,\r\n        PKVA : obj.PKVA,\r\n        nbClients : obj.nb_clients,\r\n        type : obj.type,\r\n        marque : obj.marque,\r\n        poste : obj.poste,\r\n        n_serie : obj.n_serie,\r\n        origine : obj.origine,\r\n        dateMst : date ? {\r\n          year: date.getFullYear() ,\r\n          month: date.getMonth() +1,\r\n          day: date.getDate()\r\n        } : null,\r\n        department: obj.node.department ? obj.node.department[\"@id\"] : null,\r\n        node: obj.node ? obj.node[\"@id\"] : null,\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title\r\n      title=\"Mettre à jour le poste\"\r\n      [Loading]=\"posteService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n  \r\n    <form class=\"row mt-4\" [formGroup]=\"posteService.posteForm\" (ngSubmit)=\"posteService.onUpdate(id)\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card card-body\">\r\n          <!-- <fieldset [disabled]=\"(posteService.loading$ | async) && !posteService.submitted\"> -->\r\n            \r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-3\" class=\"col-md-2 col-form-label\">Designation</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"designation\"\r\n                  id=\"input-3\" \r\n                  [ngClass]=\"{'is-invalid':posteService.designation.invalid && posteService.submitted}\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                />\r\n                <div\r\n                  *ngIf=\"posteService.submitted && posteService.designation.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"posteService.designation.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-2\" class=\"col-md-2 col-form-label\">Départ</label>\r\n              <div class=\"col-md-10\" id=\"input-2\" >\r\n                <ng-select formControlName=\"department\" placeholder=\"Dépar..\">\r\n                  <ng-option *ngFor=\"let depar of (posteService.departments$ | async)\" [value]=\"'/api/departments/'+depar.id\">{{depar.titre}}</ng-option>\r\n                </ng-select>\r\n              <div #postfeedback *ngIf=\"showError && !posteService.department.value\"\r\n                  class=\"invalid-feedback d-block\">Ce champ est obligatoire.</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-1\" class=\"col-md-2 col-form-label\">Appareils coupeur</label>\r\n              <div class=\"col-md-10\" (click)=\"showError = true\" id=\"input-1\">\r\n                  <ng-select [items]=\"posteService.nodes$ | async\"\r\n                            formControlName=\"node\"\r\n                            bindLabel=\"titre\"\r\n                            bindValue=\"@id\"\r\n                            [minTermLength]=\"2\"\r\n                            [readonly]=\"!posteService.department.value\"\r\n                            [loading]=\"posteService.nodeLoading\"\r\n                            [ngClass]=\"{'is-invalid':posteService.node.invalid && posteService.submitted}\"\r\n                            typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                            [typeahead]=\"posteService.nodeInput$\">\r\n                  </ng-select>\r\n                  <div\r\n                    *ngIf=\"posteService.submitted && posteService.node.errors\"\r\n                    class=\"invalid-feedback\">\r\n                    <span *ngIf=\"posteService.node.errors.required\">Ce champ est obligatoire.</span>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-4\" class=\"col-md-2 col-form-label\">MLE</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"MLE\"\r\n                  id=\"input-4\" \r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-5\" class=\"col-md-2 col-form-label\">P KVA</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"PKVA\"\r\n                  id=\"input-5\" \r\n                  class=\"form-control\"\r\n                  type=\"number\"\r\n                  step=\"1\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-6\" class=\"col-md-2 col-form-label\">Nb de clients</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"nbClients\"\r\n                  id=\"input-6\" \r\n                  class=\"form-control\"\r\n                  type=\"number\"\r\n                  step=\"1\" \r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-7\" class=\"col-md-2 col-form-label\">Commune</label>\r\n              <div class=\"col-md-10\" id=\"input-7\" >\r\n                <ng-select [items]=\"posteService.communes$ | async\"\r\n                        formControlName=\"commune\"\r\n                        bindLabel=\"titre\"\r\n                        bindValue=\"@id\"\r\n                        [minTermLength]=\"2\"\r\n                        [loading]=\"posteService.communeLoading\"\r\n                        typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                        [typeahead]=\"posteService.communeInput$\">\r\n                </ng-select>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-8\" class=\"col-md-2 col-form-label\">Date MST</label>\r\n              <div class=\"col-md-10\">\r\n                <div class=\"input-group clockpicker\">\r\n                  <input ngbDatepicker [minDate]=\"{year: 1900, month: 1, day: 1}\" id=\"input-8\" formControlName=\"dateMst\" class=\"form-control\" (click)=\"ds.open()\" #ds=\"ngbDatepicker\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-type\" class=\"col-md-2 col-form-label\">Type</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"type\"\r\n                  id=\"input-type\" \r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-marque\" class=\"col-md-2 col-form-label\">Marque</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"marque\"\r\n                  id=\"input-marque\" \r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-poste\" class=\"col-md-2 col-form-label\">Poste</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"poste\"\r\n                  id=\"input-poste\" \r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-nserie\" class=\"col-md-2 col-form-label\">N° serie</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"n_serie\"\r\n                  id=\"input-nserie\" \r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"input-origine\" class=\"col-md-2 col-form-label\">Origine</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"origine\"\r\n                  id=\"input-origine\" \r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"row justify-content-end\">\r\n              <div class=\"col-auto\">\r\n                <button class=\"btn btn-light me-2\" routerLink=\"/postes\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n                <button type=\"submit\" [disabled]=\"posteService.loading$ | async\" class=\"btn btn-primary\">Sauvegarder</button>\r\n              </div>\r\n            </div>\r\n        <!-- </fieldset> -->\r\n        </div>\r\n      </div>\r\n      <!-- end col -->\r\n    </form>\r\n    <!-- end row -->\r\n</div>\r\n  ","import { NgModule } from '@angular/core';\r\n\r\n// import { UIModule } from 'src/app/shared/ui/ui.module';\r\nimport { posteRoutingModule } from './poste-routing.module';\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { posteCreateComponent } from './poste-create/poste-create.component';\r\nimport { posteDetailsComponent } from './poste-details/poste-details.component';\r\nimport { posteUpdateComponent } from './poste-update/poste-update.component';\r\nimport { postesListComponent } from './postes-list/postes-list.component';\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\n@NgModule({\r\n  imports: [\r\n    posteRoutingModule,\r\n    NgbDatepickerModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    postesListComponent,\r\n    posteCreateComponent,\r\n    posteUpdateComponent,\r\n    posteDetailsComponent,\r\n  ],\r\n})\r\nexport class posteModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { Observable, Subject, concat, of } from \"rxjs\";\r\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { Commune, Department, Node, Pagination, Poste } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { communeService } from \"../communes/commune.service\";\r\nimport { departmentService } from \"../departments/department.service\";\r\n\r\nconst formatDate = (date) => new Date(date.year,date.month,date.day).toISOString();\r\nconst zeroPad = (num, places = 2) => String(num).padStart(places, '0');\r\nconst DateToString = (date) => `${date.year}-${zeroPad(date.month)}-${zeroPad(date.day)}`;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class posteService extends EntityCollectionServiceBase<Poste> {\r\n  readonly pageSize = environment.pageSize;\r\n  private server = environment.serverURL;\r\n  postes$: Observable<Poste[]>;\r\n  \r\n  communes$: Observable<Commune[]>;\r\n  communeLoading = false;\r\n  communeInput$ = new Subject<string>();\r\n\r\n  departments$: Observable<Department[]>;\r\n  departmentLoading = false;\r\n  departmentInput$ = new Subject<string>();\r\n\r\n  nodes$: Observable<Node[]>;\r\n  nodeLoading = false;\r\n  nodeInput$ = new Subject<string>();\r\n\r\n  pagination$: Observable<Pagination>;\r\n  submitted: boolean = false;\r\n  isLoading = false;\r\n  page:number = 1;\r\n  lastSearchedParams;\r\n  uploadResponse:string[];\r\n  \r\n  public selectedFile:File;\r\n  public posteForm: FormGroup;\r\n  public exportForm: FormGroup;\r\n  public importForm: FormGroup;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    public departmentService: departmentService,\r\n    public communeService: communeService,\r\n    private http: HttpClient,\r\n    private toast: HotToastService\r\n  ) {\r\n    super(\"postes\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n  \r\n  loadCommunes(defaultVal = []) : void{\r\n    this.communes$ = concat(\r\n      of(defaultVal), // default items\r\n      this.communeInput$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          filter((val) => val != null),\r\n          tap(() => this.communeLoading = true),\r\n          switchMap(term => this.communeService.getWithQuery(\"properties[]=id&properties[]=titre&titre=\"+term).pipe(\r\n              catchError(() => of([])), // empty list on error\r\n              tap(() => this.communeLoading = false)\r\n          ))\r\n      )\r\n    );\r\n  }\r\n  loadDepartments(byTerm = true): void {\r\n    if(byTerm){\r\n      this.departments$ = concat(\r\n        of([]), // default items\r\n        this.departmentInput$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          filter((val) => val != null),\r\n          tap(() => this.departmentLoading = true),\r\n          switchMap(term => this.departmentService.getWithQuery(\"properties[]=id&properties[]=titre&titre=\" + term).pipe(\r\n            catchError(() => of([])), // empty list on error\r\n            tap(() => this.departmentLoading = false)\r\n          ))\r\n        )\r\n      );\r\n    } else {\r\n      this.departments$ = this.departmentService.getWithQuery(\"properties[]=id&properties[]=titre\");\r\n    }\r\n  }\r\n  loadNodes(defaultVal = []) : void{\r\n    this.nodes$ = concat(\r\n      of(defaultVal), // default items\r\n      this.nodeInput$.pipe(\r\n          debounceTime(500),\r\n          distinctUntilChanged(),\r\n          filter((val) => val != null),\r\n          tap(() => this.nodeLoading = true),\r\n          switchMap(term => \r\n            this.http.get<Node[]>(`${this.server}/api/nodes?properties[]=id&properties[]=titre&titre=${term}`+\r\n            (this.department ?  \"&department.id=\"+ this.department.value.match(/\\d+/)[0] : \"\")\r\n            )\r\n            .pipe(\r\n              map(response => response[\"hydra:member\"]),\r\n              catchError(() => of([])), // empty list on error\r\n              tap(() => this.nodeLoading = false)\r\n            )\r\n          )\r\n      )\r\n    );\r\n  }\r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    // console.log(\"getPagination\")\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id poste id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"Poste supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.posteForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * export spreadsheet from the server\r\n   */\r\n  exportSpreadSheet(): void{\r\n    let form = this.exportForm;\r\n    this.isLoading = true;\r\n    let that = this;\r\n    let toast = this.toast;\r\n    let url = `${this.server}/api/export_spreadsheet`;\r\n    let obj = Object.entries(form.value as Poste);\r\n    // remove empty values\r\n    const filter = Object.fromEntries(obj.filter(([key, value]) => value !== \"\" && value !== null ));\r\n    filter[\"dateMst\"] && (filter[\"dateMst\"] = formatDate(filter[\"dateMst\"]));\r\n    // console.log(data);\r\n    // return; \r\n    this.http.post(url, {className : \"poste\", filter }, { responseType: 'blob' } ).subscribe(\r\n      (response) => {\r\n        that.isLoading = false;\r\n        // Create a blob URL from the response\r\n        const blob = new Blob([response], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        window.open(url, '_blank').focus();\r\n\r\n      },\r\n      (error) => {\r\n        that.isLoading = false;\r\n        toast.error(\"un problème est survenu, veuillez réessayer\"+error)\r\n      })\r\n   }\r\n\r\n\r\n  /**\r\n   * import spreadsheet to the server\r\n   */\r\n  importSpreadSheet(): void{\r\n    this.submitted = true;    \r\n    this.isLoading = true;\r\n\r\n    if (this.importForm.invalid) return;\r\n    \r\n    let url = `${this.server}/api/import_spreadsheet`;\r\n    let that = this;\r\n    let toast = this.toast;\r\n    let body: FormData = new FormData();\r\n    body.append(\"spreadSheet\", this.selectedFile);\r\n    body.append(\"addNonExAssoc\", this.addNonExitingAssociation.value);\r\n    body.append(\"updateIfExist\", this.updateIfExist.value);\r\n    body.append(\"className\", \"poste\");\r\n    body.append(\"uniqueColumns\", \"Designation,Node\");\r\n\r\n     this.http.post<{messages: string[]}>( url, body, { reportProgress: true, responseType: 'json' }).pipe().subscribe(\r\n      \r\n      (response) => {\r\n        // console.log('Response:', response);\r\n        that.importForm.reset();\r\n        that.submitted = false;\r\n        that.selectedFile = null;\r\n        that.isLoading = false;\r\n        // console.log(response);\r\n        that.uploadResponse = response.messages;\r\n        toast.show('L\\'opération se termine avec succès', {icon: ''});\r\n      },\r\n      (error) => {\r\n        that.isLoading = false;\r\n        toast.error(\"un problème est survenu, veuillez réessayer\"+error)\r\n      }  \r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Persist : Create\r\n   */\r\n  onCreate(): void {\r\n    let posteForm = this.posteForm;\r\n    this.submitted = true;    \r\n    if (posteForm.invalid) return;\r\n    let toast = this.toast;\r\n    let obj = Object.entries(posteForm.value as Poste);\r\n    // remove empty values\r\n    const poste = Object.fromEntries(obj.filter(([key, value]) => value !== \"\"));\r\n    \r\n    poste[\"dateMst\"] && (poste[\"dateMst\"] = formatDate(poste[\"dateMst\"]));\r\n\r\n    this.add(poste).subscribe({\r\n      error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n      complete() {\r\n        posteForm.reset();\r\n        this.submitted = false;\r\n        toast.success(\"Poste ajouté avec succès\");\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Persist : update\r\n   */\r\n  onUpdate(id:number): void {\r\n    let posteForm = this.posteForm;\r\n    this.submitted = true;\r\n    if (posteForm.invalid) return;\r\n    let toast = this.toast;\r\n    let obj = posteForm.value;\r\n\r\n    // remove empty values\r\n    let poste = obj as Poste;\r\n    poste[\"dateMst\"] && (poste[\"dateMst\"] = formatDate(poste[\"dateMst\"]));\r\n    poste.id = id;\r\n\r\n      this.update(poste).subscribe({\r\n        error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n        complete() {\r\n          toast.success(\"Poste a été mis à jour avec succès\");\r\n          this.submitted = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.postes$ = of([]); // clear table\r\n\r\n    // format date\r\n    if(Object.keys(obj).length > 1){\r\n      // console.log(obj);\r\n      const updateObj = (key:string) => obj[key] && delete Object.assign(obj, {[\"date_mst[\"+key+\"]\"]: DateToString(obj[key]) })[key];\r\n      updateObj(\"before\");updateObj(\"after\");\r\n    }\r\n\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.postes$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n  get designation() {\r\n    return this.posteForm.get(\"designation\");\r\n  }\r\n  get node() {\r\n    return this.posteForm.get(\"node\");\r\n  }\r\n  get department() {\r\n    return this.posteForm.get(\"department\");\r\n  }\r\n  get addNonExitingAssociation() {\r\n    return this.importForm.get(\"addNonExitingAssociation\");\r\n  }\r\n  get updateIfExist() {\r\n    return this.importForm.get(\"updateIfExist\");\r\n  }\r\n  get spreadSheet() {\r\n    return this.importForm.get(\"spreadSheet\");\r\n  }\r\n}\r\n","import { Component, TemplateRef, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { NgSelectConfig } from \"@ng-select/ng-select\";\r\nimport { AuthenticationService } from \"src/app/core/services/auth.service\";\r\nimport { posteService } from \"../poste.service\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: \"app-postes-list\",\r\n  templateUrl: \"./postes-list.component.html\",\r\n})\r\nexport class postesListComponent {\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(\r\n    public service: posteService,\r\n    private fb: FormBuilder,\r\n    public authService: AuthenticationService,\r\n    private modalService: NgbModal,\r\n    private config: NgSelectConfig\r\n  ) {\r\n    service.findAll();\r\n    service.loadCommunes();\r\n    service.loadDepartments();\r\n\r\n    service.posteForm = fb.group({\r\n      titre: [\"\"],\r\n      designation: [\"\"],\r\n      MLE: [\"\"],\r\n      PKVA: [null],\r\n      puissance: [null],\r\n      nb_clients: [\"\"],\r\n      before: [\"\"],\r\n      after: [\"\"],\r\n      type: [\"\"],\r\n      marque: [\"\"],\r\n      poste: [\"\"],\r\n      n_serie: [\"\"],\r\n      \"node.department.id[]\": [''],\r\n      \"node.commune.id[]\": [''],\r\n    });\r\n    service.exportForm = fb.group({\r\n      titre: [\"\"],\r\n      designation: [\"\"],\r\n      MLE: [\"\"],\r\n      PKVA: [\"\"],\r\n      nb_clients: [\"\"],\r\n      before: [\"\"],\r\n      after: [\"\"],\r\n      type: [\"\"],\r\n      marque: [\"\"],\r\n      poste: [\"\"],\r\n      n_serie: [\"\"],\r\n      orgine: [\"\"],\r\n      \"node.department.id[]\": [''],\r\n      \"node.commune.id[]\": [''],\r\n    });\r\n\r\n    service.importForm = fb.group({\r\n      addNonExitingAssociation: [true],\r\n      updateIfExist: [false],\r\n      spreadSheet: [null,Validators.required],\r\n    });\r\n\r\n    config.notFoundText = 'Aucune donnée trouvée !';\r\n\r\n  }\r\n  onUpload(fileInput: any){\r\n    this.service.selectedFile = fileInput.target.files[0];\r\n  }\r\n\r\n  @ViewChild(\"content\")\r\n  private content: TemplateRef<any>;\r\n  openModal() {\r\n    this.modalService.open(this.content, { size: 'xl',centered: true });\r\n  }\r\n  @ViewChild(\"export_content\")\r\n  private export_content: TemplateRef<any>;\r\n  ExportModal() {\r\n    this.modalService.open(this.export_content, { size: 'xl',centered: true });\r\n  }\r\n}\r\n","<div class=\"container-fluid mb-5\">\r\n  <div class=\"row align-items-center justify-content-between mb-4\">\r\n    <div class=\"col-auto\">\r\n      <app-page-title\r\n        title=\"Postes de distribution\"\r\n        [breadcrumbItems]=\"breadCrumbItems\"\r\n      ></app-page-title>\r\n    </div>\r\n    <div class=\"col-auto\">\r\n      <button class=\"btn bg-light text-primary ms-2\" title=\"Importer\" (click)=\"openModal()\">\r\n        <i class=\"fas fa-upload\"></i>\r\n      </button>\r\n      <button class=\"btn bg-light text-primary ms-2\" title=\"Exporter\" (click)=\"ExportModal()\">\r\n        <i class=\"fas fa-download\"></i>\r\n      </button>\r\n      <a routerLink=\"/postes/add\" class=\"btn btn-primary ms-2\"\r\n      *ngIf=\"authService.isAuthorized('postes_add')\"\r\n        ><i class=\"fas fa-plus-circle\"></i> Ajouter</a\r\n      >\r\n    </div>\r\n  </div>\r\n  <style>\r\n    th{min-width: 120px;}\r\n  </style>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          \r\n          <!-- Table -->\r\n          <form [formGroup]=\"service.posteForm\" (ngSubmit)=\"service.onSearch()\" class=\"table-responsive\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Designation</th>\r\n                  <th style=\"min-width: 200px\">Départ</th>\r\n                  <th>MLE</th>\r\n                  <th>P KVA</th>\r\n                  <th>Nb de clients</th>\r\n                  <th>Commune</th>\r\n                  <th>Date MST</th>\r\n                  <th>Type</th>\r\n                  <th>Marque</th>\r\n                  <th>Poste</th>\r\n                  <th>N° serie</th>\r\n                  <th>Puis-appelée</th>\r\n                  <th width=\"123px\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <!-- search -->\r\n                <tr valign=\"middle\" \r\n                >\r\n                  <td><input type=\"text\" placeholder=\"Designation...\" formControlName=\"designation\" #searchDesignation class=\"form-control\"></td>\r\n                  <td>\r\n                    <ng-select [items]=\"service.departments$ | async\"\r\n                              #searchDepar\r\n                              formControlName=\"node.department.id[]\"\r\n                              bindLabel=\"titre\"\r\n                              bindValue=\"id\"\r\n                              [multiple]=\"true\"\r\n                              [minTermLength]=\"2\"\r\n                              placeholder=\"Départ..\"\r\n                              [loading]=\"service.departmentLoading\"\r\n                              typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                              [typeahead]=\"service.departmentInput$\">\r\n                    </ng-select>\r\n                  </td>\r\n                  <td><input type=\"text\" placeholder=\"MLE...\" formControlName=\"MLE\" #searchMLE class=\"form-control\"></td>\r\n                  <td><input type=\"number\" step=\"1\" placeholder=\"P KVA...\" formControlName=\"PKVA\" #searchPKVA class=\"form-control\"></td>\r\n                  <td><input type=\"text\" placeholder=\"Nb de clients...\" formControlName=\"nb_clients\" #searchNbClients class=\"form-control\"></td>\r\n\r\n                  <td>\r\n                    <ng-select [items]=\"service.communes$ | async\"\r\n                              #searchCommunes\r\n                              formControlName=\"node.commune.id[]\"\r\n                              bindLabel=\"titre\"\r\n                              bindValue=\"id\"\r\n                              [multiple]=\"true\"\r\n                              \r\n                              [minTermLength]=\"2\"\r\n                              placeholder=\"Communes..\"\r\n                              [loading]=\"service.communeLoading\"\r\n                              typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                              [typeahead]=\"service.communeInput$\">\r\n                    </ng-select>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <div class=\"d-flex gap-2\">\r\n                    <div class=\"input-group clockpicker\">\r\n                      <input #searchDateStart ngbDatepicker [minDate]=\"{year: 1900, month: 1, day: 1}\" formControlName=\"after\" class=\"form-control\" (click)=\"ds.open()\" placeholder=\"De...\" #ds=\"ngbDatepicker\">\r\n                    </div>\r\n                    <div class=\"input-group clockpicker\">\r\n                      <input #searchDateEnd ngbDatepicker [minDate]=\"{year: 1900, month: 1, day: 1}\" formControlName=\"before\" class=\"form-control\" (click)=\"de.open()\" placeholder=\"À...\" #de=\"ngbDatepicker\">\r\n                    </div>\r\n                    </div>\r\n                  </td>\r\n\r\n                  <td><input type=\"text\" placeholder=\"Type...\" formControlName=\"type\" #searchType class=\"form-control\"></td>\r\n                  <td><input type=\"text\" placeholder=\"Marque...\" formControlName=\"marque\" #searchMarque class=\"form-control\"></td>\r\n                  <td><input type=\"text\" placeholder=\"Poste...\" formControlName=\"poste\" #searchPoste class=\"form-control\"></td>\r\n                  <td><input type=\"text\" placeholder=\"N° serie...\" formControlName=\"n_serie\" #searchNSerie class=\"form-control\"></td>\r\n                  <td><input type=\"number\" step=\"1\" placeholder=\"Puis-appelée...\" formControlName=\"puissance\" #searchPuissance class=\"form-control\"></td>\r\n\r\n                  <td>\r\n                    <button type=\"submit\" class=\"btn btn-sm btn-primary d-flex align-items-center\">\r\n                      <i class=\"bx bx-search me-1\"></i>Rechercher\r\n                    </button>\r\n                    <button type=\"reset\" class=\"btn btn-sm text-primary flex align-items-center\" (click)=\"service.findAll()\">\r\n                      <i class=\"bx bx-x me-1\"></i>Réinitialiser\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                <!-- loading -->\r\n                <tr>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"11\"\r\n                    *ngIf=\"!(service.postes$ | async) && service.loading$ | async\"\r\n                  >\r\n                    Chargement...\r\n                  </td>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"11\"\r\n                    *ngIf=\"(service.postes$ | async) && (service.postes$ | async).length === 0 && service.loaded$ | async\"\r\n                  >\r\n                  Aucune donnée trouvée !\r\n                  </td>\r\n                </tr>\r\n                <!-- data -->\r\n                <tr *ngFor=\"let poste of (service.postes$ | async); let i = index\">\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.designation\"\r\n                      [term]=\"searchDesignation.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <a \r\n                      *ngIf=\"poste.node.department\"\r\n                      [routerLink]=\"authService.isAuthorized('departments_details') ? ['/departments/details', poste.node.department.id] : null\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\">{{poste.node.department.titre}}</a>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.MLE\"\r\n                      [term]=\"searchMLE.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.PKVA\"\r\n                      [term]=\"searchPKVA.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.nb_clients\"\r\n                      [term]=\"searchNbClients.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <a \r\n                      *ngIf=\"poste.node.commune\"\r\n                      [routerLink]=\"authService.isAuthorized('communes_details') ? ['/communes/details', poste.node.commune.id] : null\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\">{{poste.node.commune.titre}}</a>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                    [result]=\"poste.date_mst | date:'shortDate'\"\r\n                    [term]=\"searchDateStart.value+searchDateEnd.value\"\r\n                  ></ngb-highlight>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.type\"\r\n                      [term]=\"searchType.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.marque\"\r\n                      [term]=\"searchMarque.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.poste\"\r\n                      [term]=\"searchPoste.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.n_serie\"\r\n                      [term]=\"searchNSerie.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"poste.puissance\"\r\n                      [term]=\"searchPuissance.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  \r\n                  <td align=\"center\">\r\n                    <div ngbDropdown \r\n                      placement=\"bottom-left\"\r\n                      *ngIf=\"authService.isAuthorized('postes_details') || authService.isAuthorized('postes_update') || authService.isAuthorized('postes_delete')\"\r\n                      >\r\n                      <i\r\n                        class=\"fas fa-ellipsis-h dropdown-toggle c-pointer\"\r\n                        ngbDropdownToggle\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"true\"\r\n                      ></i>\r\n                      <div\r\n                        class=\"dropdown-menu dropdown-menu-end\"\r\n                        ngbDropdownMenu\r\n                      >\r\n                        <a class=\"dropdown-item\"\r\n                          [routerLink]=\"['details', poste.id]\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('postes_details')\"\r\n                          >\r\n                          <i class=\"fas fa-eye me-2\"></i> Voir\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('postes_update')\"\r\n                          [routerLink]=\"['update', poste.id]\"\r\n                          >\r\n                          <!-- skipLocationChange -->\r\n                          <i class=\"fas fa-edit me-2\"></i> Modifier\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item text-danger\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('postes_delete')\"\r\n                          (click)=\"service.deleteItem(poste.id, $event.target)\"\r\n                        >\r\n                          <i class=\"fas fa-trash me-2\"></i> Supprimer\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <!-- End table -->\r\n          <!-- Pagination -->\r\n          <ng-container *ngIf=\"(service.pagination$ | async) as pagination\">\r\n            <div\r\n              *ngIf=\"pagination.totalRecords > service.pageSize\"\r\n              class=\"row justify-content-md-between align-items-md-center mt-2\"\r\n            >\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div\r\n                  class=\"dataTables_info mb-2\"\r\n                  id=\"tickets-table_info\"\r\n                  role=\"status\"\r\n                  aria-live=\"polite\"\r\n                >\r\n                Affichage de {{pagination.startIndex}} \r\n                à {{pagination.endIndex}} \r\n                de {{pagination.totalRecords}} entrées\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div class=\"text-md-right float-md-end pagination-rounded\">\r\n                  <ngb-pagination\r\n                    [collectionSize]=\"pagination.totalRecords\"\r\n                    [(page)]=\"service.page\"\r\n                    [pageSize]=\"service.pageSize\"\r\n                    (pageChange)=\"service.onPaginate($event)\" [maxSize]=\"5\" \r\n                  >\r\n                  </ngb-pagination>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <!-- End Pagination -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n\t<div class=\"modal-header border-0\">\r\n\t\t<h4 class=\"modal-title\"></h4>\r\n\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss()\"></button>\r\n\t</div>\r\n\t<div class=\"modal-body\">\r\n\t\t<form id=\"import-form\" [formGroup]=\"service.importForm\" (ngSubmit)=\"service.importSpreadSheet()\">\r\n      <div class=\"mb-3 row m-n2\">\r\n        <div *ngIf=\"service.uploadResponse\" class=\"col-12\">\r\n          <div class=\"alert alert-warning\" *ngFor=\"let msg of service.uploadResponse\" [innerHTML]=\"msg\"></div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-6 p-2\">\r\n          <div class=\"text-center border rounded-lg py-4 p-2 p-lg-5 h-100\">\r\n          <h3 class=\"mb-4\">Commencer par un modèle</h3>\r\n          <i class=\"fas fa-file-download display-1 my-3\" style=\"color: #d3e8fc;\"></i>\r\n          <p class=\"text-muted\">Téléchargez un modèle pour commencer.</p>\r\n          <button class=\"btn btn-outline-info\">Télécharger un modèle</button>\r\n        </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-6 p-2 text-center\">\r\n          <div class=\" border rounded-lg py-4 p-2 p-lg-5\">\r\n          <h3>J'ai déjà un fichier prêt</h3>\r\n          <label class=\"d-flex align-items-center justify-content-center flex-column my-4 position-relative\">\r\n            <i class=\"fas fa-file-excel display-1 my-3\" style=\"color: #d3e8fc;\"></i>\r\n            <input class=\"position-absolute w-100 h-100 opacity-0 c-pointer\" formControlName=\"spreadSheet\" type=\"file\" accept=\"text/plain, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" (change)=\"onUpload($event)\">\r\n\r\n            <p class=\"text-muted\">{{service.selectedFile && service.selectedFile.name ? service.selectedFile.name : \"Sélectionnez un fichier ou glissez-le ici\"}}</p>\r\n            <p *ngIf=\"service.submitted && service.spreadSheet.errors\" class=\"text-danger\">\r\n                <span *ngIf=\"service.spreadSheet.errors.required\">Veuillez sélectionner un fichier !</span>\r\n            </p>\r\n            <span class=\"btn btn-outline-info\">Sélectionner un fichier</span>\r\n          </label>\r\n          <div class=\"form-check form-checkbox-outline form-check-info mb-3\">\r\n            <input type=\"checkbox\" value=\"true\" formControlName=\"addNonExitingAssociation\" id=\"addNonExitingAssociation\" checked class=\"form-check-input\">\r\n            <label for=\"addNonExitingAssociation\" class=\"form-check-label\">Ajouter \" Appareils coupeur \" si elle n'a pas été trouvée</label>\r\n          </div>\r\n          <div class=\"form-check form-checkbox-outline form-check-info mb-3\">\r\n            <input type=\"checkbox\" value=\"true\" formControlName=\"updateIfExist\" id=\"updateIfExist\" checked class=\"form-check-input\">\r\n            <label for=\"updateIfExist\" class=\"form-check-label\">Mettre à jour le poste s'il a déjà été trouvé<br><small class=\"text-muted\">(chaque poste est identifié par sa désignation et son appareil de coupure)</small></label>\r\n          </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\t\t</form>\r\n\t</div>\r\n\t<div class=\"modal-footer border-0\">\r\n\t\t<button type=\"button\" class=\"btn btn-light\" [disabled]=\"service.isLoading\">Annuler</button>\r\n\t\t<button type=\"submit\" class=\"btn btn-info\" [disabled]=\"service.isLoading\" form=\"import-form\">Importer</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #export_content let-exportmodal>\r\n\t<div class=\"modal-header border-0\">\r\n\t\t<h4 class=\"modal-title\">Filtre de données exportées</h4>\r\n\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"exportmodal.dismiss()\"></button>\r\n\t</div>\r\n\t<div class=\"modal-body\">\r\n\t\t<form id=\"import-form\" [formGroup]=\"service.exportForm\" (ngSubmit)=\"service.exportSpreadSheet()\">\r\n      <div class=\"mb-3 row m-n2\">\r\n       \r\n       \r\n        <!-- Designation -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-1\" class=\"col-md-2 col-form-label\">Designation</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"Designation...\" formControlName=\"designation\"  class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- Départ -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-2\" class=\"col-md-2 col-form-label\">Départ</label>\r\n            <div class=\"col-md-10\">\r\n              <ng-select [items]=\"service.departments$ | async\"\r\n                          formControlName=\"node.department.id[]\"\r\n                          bindLabel=\"titre\"\r\n                          bindValue=\"id\"\r\n                          [multiple]=\"true\"\r\n                          [minTermLength]=\"2\"\r\n                          placeholder=\"Départ..\"\r\n                          [loading]=\"service.departmentLoading\"\r\n                          typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                          [typeahead]=\"service.departmentInput$\">\r\n                </ng-select>\r\n            </div>\r\n        </div>\r\n        <!-- MLE -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-3\" class=\"col-md-2 col-form-label\">MLE</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"MLE...\" formControlName=\"MLE\"  class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- P KVA -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-4\" class=\"col-md-2 col-form-label\">P KVA</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"number\" step=\"1\" placeholder=\"P KVA...\" formControlName=\"PKVA\"  class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- Nb de clients -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-5\" class=\"col-md-2 col-form-label\">Nb de clients</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"Nb de clients...\" formControlName=\"nb_clients\"  class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- Commune -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-6\" class=\"col-md-2 col-form-label\">Commune</label>\r\n            <div class=\"col-md-10\">\r\n              <ng-select [items]=\"service.communes$ | async\"\r\n                          formControlName=\"node.commune.id[]\"\r\n                          bindLabel=\"titre\"\r\n                          bindValue=\"id\"\r\n                          [multiple]=\"true\"\r\n                          [minTermLength]=\"2\"\r\n                          placeholder=\"Communes..\"\r\n                          [loading]=\"service.communeLoading\"\r\n                          typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                          [typeahead]=\"service.communeInput$\">\r\n                </ng-select>\r\n            </div>\r\n        </div>\r\n        <!-- Date MST -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-7\" class=\"col-md-2 col-form-label\">Date MST</label>\r\n            <div class=\"col-md-5\">\r\n              <input ngbDatepicker [minDate]=\"{year: 1900, month: 1, day: 1}\" formControlName=\"after\" class=\"form-control\" (click)=\"ds.open()\" placeholder=\"De...\" #sds=\"ngbDatepicker\">\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n              <input ngbDatepicker [minDate]=\"{year: 1900, month: 1, day: 1}\" formControlName=\"before\" class=\"form-control\" (click)=\"de.open()\" placeholder=\"À...\" #sde=\"ngbDatepicker\">\r\n            </div>\r\n        </div>\r\n        <!-- Type -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-8\" class=\"col-md-2 col-form-label\">Type</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"Type...\" formControlName=\"type\" class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- Marque -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-9\" class=\"col-md-2 col-form-label\">Marque</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"Marque...\" formControlName=\"marque\" class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- Poste -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-10\" class=\"col-md-2 col-form-label\">Poste</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"Poste...\" formControlName=\"poste\" class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- N° serie -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-11\" class=\"col-md-2 col-form-label\">N° serie</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"N° serie...\" formControlName=\"n_serie\" class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <!-- Origine -->\r\n        <div class=\"mb-3 row\">\r\n            <label for=\"export-11\" class=\"col-md-2 col-form-label\">Origine</label>\r\n            <div class=\"col-md-10\">\r\n              <input type=\"text\" placeholder=\"Origine...\" formControlName=\"origine\" class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        \r\n\r\n      </div>\r\n\t\t</form>\r\n\t</div>\r\n\t<div class=\"modal-footer mt-3 border-0\">\r\n\t\t<button type=\"button\" class=\"btn btn-light\" [disabled]=\"service.isLoading\" (click)=\"exportmodal.dismiss()\">Annuler</button>\r\n\t\t<button type=\"submit\" class=\"btn btn-info\" [disabled]=\"service.isLoading\" form=\"import-form\">Télécharger</button>\r\n\t</div>\r\n</ng-template>"],"names":[],"sourceRoot":"webpack:///"}