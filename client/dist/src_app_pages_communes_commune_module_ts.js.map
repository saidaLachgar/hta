{"version":3,"file":"src_app_pages_communes_commune_module_ts.js","mappings":"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","sources":["./src/app/core/guards/role.guard.ts","./src/app/pages/communes/commune-details/commune-details.component.ts","./src/app/pages/communes/commune-details/commune-details.component.html","./src/app/pages/communes/commune-routing.module.ts","./src/app/pages/communes/commune.module.ts","./src/app/pages/communes/commune.service.ts","./src/app/pages/communes/communes-list/communes-list.component.ts","./src/app/pages/communes/communes-list/communes-list.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoleGuard implements CanActivate {\r\n    constructor(private router: Router, private authService: AuthenticationService) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        let authorized = this.authService.isAuthorized(route.data.access);\r\n        if(authorized) return true;\r\n        alert(\"accès refusé\");\r\n        this.router.navigate(['/dashboard']);\r\n        return false;\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Commune } from \"src/app/core/models\";\r\nimport { AuthenticationService } from \"src/app/core/services/auth.service\";\r\nimport { communeService } from \"../commune.service\";\r\n\r\n@Component({\r\n  selector: \"app-commune-details\",\r\n  templateUrl: \"./commune-details.component.html\",\r\n})\r\nexport class communeDetailsComponent {\r\n  commune: Commune;\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public communeService: communeService,\r\n    public authService: AuthenticationService,\r\n  ) {\r\n    let id = route.snapshot.paramMap.get(\"id\");\r\n    communeService.getByKey(id).subscribe(obj => this.commune = obj);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <!-- start page title -->\r\n  <app-page-title\r\n    title=\"Détails de la commune\"\r\n    [Loading]=\"communeService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n  ></app-page-title>\r\n  <!-- end page title -->\r\n  <div class=\"card mt-4\">\r\n    <div class=\"card-body pt-5\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-nowrap mb-0\">\r\n          <tbody *ngIf=\"commune\">\r\n            <tr valign=\"middle\">\r\n              <th scope=\"row\">Titre :</th>\r\n              <td>\r\n                {{commune.titre}}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <button class=\"btn btn-light mt-4 float-end\" routerLink=\"/communes\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleGuard } from 'src/app/core/guards/role.guard';\r\nimport { communeDetailsComponent } from './commune-details/commune-details.component';\r\nimport { communesListComponent } from './communes-list/communes-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: communesListComponent, canActivate: [RoleGuard], data: {access: 'communes_show'}},\r\n  {path: 'details/:id', component: communeDetailsComponent, canActivate: [RoleGuard], data: {access: 'communes_details'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class communeRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\n\r\n// import { UIModule } from 'src/app/shared/ui/ui.module';\r\nimport { communeRoutingModule } from './commune-routing.module';\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { communesListComponent } from './communes-list/communes-list.component';\r\nimport { communeDetailsComponent } from './commune-details/commune-details.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    communeRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    communesListComponent,\r\n    communeDetailsComponent,\r\n  ],\r\n})\r\nexport class communeModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from \"@ngrx/data\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Commune, Pagination } from \"src/app/core/models\";\r\nimport { ConfirmDialogService } from \"src/app/shared/components/confirm-dialog/confirm-dialog.service\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class communeService extends EntityCollectionServiceBase<Commune> {\r\n  readonly pageSize = environment.pageSize;\r\n  public communeForm: FormGroup;\r\n  communes$: Observable<Commune[]>;\r\n  pagination$: Observable<Pagination>;\r\n  persistence: boolean | number = false;\r\n  submitted: boolean = false;\r\n  page: number = 1;\r\n  lastSearchedParams;\r\n\r\n  constructor(\r\n    private serviceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private toast: HotToastService,\r\n  ) {\r\n    super(\"communes\", serviceElementsFactory);\r\n  }\r\n\r\n  /**\r\n   * Get records\r\n   */\r\n  findAll(): void {\r\n    this.findByCriteria({ page: 1 });\r\n  }\r\n\r\n  /**\r\n   * Get pagination\r\n   */\r\n  getPagination(): void {\r\n    this.pagination$ = of(); // reset pagination\r\n    this.pagination$ = this.selectors$.entityActions$.pipe(\r\n      map(action => (action as any).payload.pagination)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete item\r\n   * @param id commune id\r\n   * @param target html element\r\n   */\r\n  deleteItem(id: number, target: HTMLElement) {\r\n    this.confirmDialogService.setConfirmation(\"Vous êtes sûr de vouloir supprimer?\", () => {\r\n      this.delete(id)\r\n        .pipe(\r\n          this.toast.observe({\r\n            loading: \"Suppression...\",\r\n            success: () => {\r\n              target.closest(\"tr\").remove();\r\n              return \"Commune supprimé avec succès\";\r\n            },\r\n            error: \"un problème est survenu, veuillez réessayer\",\r\n          })\r\n        )\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  onSearch(): void {\r\n    this.page = 1;\r\n    this.lastSearchedParams = this.communeForm.value;\r\n    this.findByCriteria({ page: 1, ...this.lastSearchedParams });\r\n  }\r\n\r\n  /**\r\n   * Persist : Save\r\n   */\r\n  onSave(): void {\r\n    let form = this.communeForm;\r\n    this.submitted = true;\r\n    if (form.invalid) return;\r\n    let toast = this.toast;\r\n    let _this = this;\r\n    let observable: Observable<Commune>;\r\n    if (this.persistence === false) {\r\n      let commune = form.value as Commune;\r\n      observable = this.add(commune);\r\n    } else {\r\n      let commune:Commune = { ...form.value };\r\n      commune.id = this.persistence as number;\r\n      observable = this.update(commune);\r\n    }\r\n    observable.subscribe({\r\n      error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n      complete() {\r\n        form.reset();\r\n        _this.findByCriteria({ page: 1, ..._this.lastSearchedParams });\r\n        toast.success(`Commune a été ${_this.persistence === false ? 'ajouté' : 'mis à jour'} avec succès`);\r\n        _this.persistence = false;\r\n        _this.submitted = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle update\r\n   */\r\n  onUpdate(id: number, titre: string): void {\r\n    this.persistence = id;\r\n    this.communeForm.setValue({\r\n      titre: titre,\r\n    });\r\n  }\r\n\r\n  get titre() {\r\n    return this.communeForm.get(\"titre\");\r\n  }\r\n\r\n  /**\r\n   * find By Criteria\r\n   * @param obj query parameters\r\n   */\r\n  findByCriteria(obj): void {\r\n    this.communes$ = of([]); // clear table\r\n    // remove empty values\r\n    let queryParams = Object.keys(obj)\r\n      .filter((k) => obj[k] != \"\" && obj[k] != null)\r\n      .reduce((a, k) => ({ ...a, [k]: obj[k] }), {});\r\n    this.communes$ = this.getWithQuery(queryParams);\r\n    this.getPagination();\r\n  }\r\n\r\n  /**\r\n   * on Paginate\r\n   * @param page page to search for\r\n   */\r\n  onPaginate(page: number) {\r\n    this.findByCriteria({ page: page, ...this.lastSearchedParams });\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { AuthenticationService } from \"src/app/core/services/auth.service\";\r\nimport { communeService } from \"../commune.service\";\r\n\r\n@Component({\r\n  selector: \"app-communes-list\",\r\n  templateUrl: \"./communes-list.component.html\",\r\n})\r\nexport class communesListComponent {\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(\r\n    public service: communeService,\r\n    private fb: FormBuilder,\r\n    public authService: AuthenticationService,\r\n  ) {\r\n    service.findAll();\r\n    service.communeForm = fb.group({\r\n      titre: [''],\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid mb-5\">\r\n  <div class=\"row align-items-center justify-content-between mb-4\">\r\n    <div class=\"col-auto\">\r\n      <app-page-title\r\n        title=\"Les Communes\"\r\n        [breadcrumbItems]=\"breadCrumbItems\"\r\n      ></app-page-title>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <!-- Table -->\r\n          <form [formGroup]=\"service.communeForm\" (ngSubmit)=\"service.onSearch()\" class=\"table-responsive\">\r\n            <table class=\"table table-bordered\">\r\n              <tbody>\r\n                <tr valign=\"middle\" \r\n                >\r\n                  <td><input type=\"text\" placeholder=\"Titre...\" formControlName=\"titre\" #searchTitre class=\"form-control\"></td>\r\n                  <td class=\"text-center\">\r\n                    <button type=\"submit\" class=\"btn btn-sm btn-primary d-flex align-items-center mx-auto\">\r\n                      <i class=\"bx bx-search me-1\"></i>Rechercher\r\n                    </button>\r\n                    <button type=\"reset\" class=\"btn btn-sm text-primary flex align-items-center\" (click)=\"service.findAll()\">\r\n                      <i class=\"bx bx-x me-1\"></i>Réinitialiser\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"5\"\r\n                    *ngIf=\"!(service.communes$ | async) && service.loading$ | async\"\r\n                  >\r\n                    Chargement...\r\n                  </td>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"5\"\r\n                    *ngIf=\"(service.communes$ | async) && (service.communes$ | async).length === 0 && service.loaded$ | async\"\r\n                  >\r\n                  Aucune donnée trouvée !\r\n                  </td>\r\n                </tr>\r\n                <tr *ngFor=\"let commune of (service.communes$ | async); let i = index\" valign=\"middle\">\r\n                  <td>\r\n                    <ngb-highlight\r\n                        [result]=\"commune.titre\"\r\n                        [term]=\"searchTitre.value\"\r\n                      ></ngb-highlight>\r\n                  </td>\r\n                  \r\n                  <td align=\"center\">\r\n                    <div ngbDropdown \r\n                      placement=\"bottom-left\"\r\n                      *ngIf=\"authService.isAuthorized('communes_details') || authService.isAuthorized('communes_update') || authService.isAuthorized('communes_delete')\"\r\n                      >\r\n                      <i\r\n                        class=\"fas fa-ellipsis-h dropdown-toggle c-pointer\"\r\n                        ngbDropdownToggle\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"true\"\r\n                      ></i>\r\n                      <div\r\n                        class=\"dropdown-menu dropdown-menu-end\"\r\n                        ngbDropdownMenu\r\n                      >\r\n                        <a class=\"dropdown-item\"\r\n                          [routerLink]=\"['details', commune.id]\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('communes_details')\"\r\n                          >\r\n                          <i class=\"fas fa-eye me-2\"></i> Voir\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('communes_update')\"\r\n                          (click)=\"service.onUpdate(commune.id, commune.titre)\"\r\n                          >\r\n                          <!-- skipLocationChange -->\r\n                          <i class=\"fas fa-edit me-2\"></i> Modifier\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item text-danger\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('communes_delete')\"\r\n                          (click)=\"service.deleteItem(commune.id, $event.target)\"\r\n                        >\r\n                          <i class=\"fas fa-trash me-2\"></i> Supprimer\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <!-- End table -->\r\n          <!-- Pagination -->\r\n          <ng-container *ngIf=\"(service.pagination$ | async) as pagination\">\r\n            <div\r\n              *ngIf=\"pagination.totalRecords > service.pageSize\"\r\n              class=\"row justify-content-md-between align-items-md-center mt-2\"\r\n            >\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div\r\n                  class=\"dataTables_info mb-2\"\r\n                  id=\"tickets-table_info\"\r\n                  role=\"status\"\r\n                  aria-live=\"polite\"\r\n                >\r\n                Affichage de {{pagination.startIndex}} \r\n                à {{pagination.endIndex}} \r\n                de {{pagination.totalRecords}} entrées\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div class=\"text-md-right float-md-end pagination-rounded\">\r\n                  <ngb-pagination\r\n                    [collectionSize]=\"pagination.totalRecords\"\r\n                    [(page)]=\"service.page\"\r\n                    [pageSize]=\"service.pageSize\"\r\n                    (pageChange)=\"service.onPaginate($event)\" [maxSize]=\"5\" \r\n                  >\r\n                  </ngb-pagination>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <!-- End Pagination -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\" *ngIf=\"authService.isAuthorized('communes_add')\">\r\n      <form class=\"card\" [formGroup]=\"service.communeForm\" (ngSubmit)=\"service.onSave()\">\r\n        <fieldset class=\"card-body justify-content-center d-flex flex-column\">\r\n            \r\n          <div class=\"mb-3 row\">\r\n            <h4 class=\"card-title mt-2 mb-4\">{{service.persistence === false ? \"Créer une nouvelle commune\" : \"Mise à jour de la commune\"}}</h4>\r\n            <label for=\"name-input\" class=\"col-md-2 col-form-label\">Titre</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"titre\"\r\n                [ngClass]=\"{'is-invalid':service.titre.invalid && service.submitted}\"\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                id=\"name-input\"\r\n                required\r\n              />\r\n              <div\r\n                *ngIf=\"service.submitted && service.titre.errors\"\r\n                class=\"invalid-feedback\">\r\n                <span *ngIf=\"service.titre.errors.required\">Ce champ est obligatoire.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row justify-content-end\">\r\n            <div class=\"col-auto\">\r\n              <button class=\"btn btn-primary\"><i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"service.submitted && (service.loading$ | async)\"></i> {{service.persistence === false ? \"Ajouter\" : \"Sauvegarder\"}}</button>\r\n            </div>\r\n          </div>\r\n\r\n        </fieldset>\r\n        <!-- end col -->\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}