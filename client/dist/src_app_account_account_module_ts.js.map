{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    AuthModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'reset-password',\r\n        component: PasswordresetComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UIModule } from '../../shared/ui/ui.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthRoutingModule } from './auth-routing';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, PasswordresetComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbAlertModule,\r\n    UIModule,\r\n    AuthRoutingModule,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\n/**\r\n * Login component\r\n */\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  error = '';\r\n  returnUrl: string;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n\r\n    // reset login status\r\n    // this.authenticationService.logout();\r\n    // get return url from route parameters or default to '/'\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  /**\r\n   * Form submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.loading = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      let that = this;\r\n      this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n        .subscribe({\r\n          error: (error) => { this.error = error ? error.error.message : ''; this.loading = false; },\r\n          complete() {\r\n            that.router.navigate(['/dashboard']);\r\n            this.loading = false;\r\n          },\r\n        })\r\n    }\r\n  }\r\n}\r\n","<div class=\"account-pages\">\r\n  <div class=\"container m-auto\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h1 class=\"h5 text-center text-uppercase mt-3 mb-4\">Identifiez-vous pour continuer</h1>\r\n            <div class=\"p-2\">\r\n              <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"username\">Matricule</label>\r\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Matricule\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Le matricule est requis</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"password\">Mot de passe</label>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input type=\"password\" class=\"form-control\" #e formControlName=\"password\" placeholder=\"Saisissez le mot de passe\"\r\n                      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\r\n                      aria-describedby=\"password-addon\">\r\n\r\n                    <button class=\"btn btn-light ms-0\" (click)=\"e.type=e.type=='password'?'text':'password'\" type=\"button\" id=\"password-addon\"><i\r\n                        class=\"mdi mdi-eye-outline\"></i></button>\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                      <span *ngIf=\"f.password.errors.required\">Le mot de passe est requis</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"form-check\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\r\n                  <label class=\"form-check-label\" for=\"remember-check\">\r\n                      Remember me\r\n                  </label> \r\n              </div>-->\r\n\r\n                <div class=\"mt-3 d-grid\">\r\n                  <button class=\"btn btn-primary\" type=\"submit\">\r\n                    <i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"loading\"></i>\r\n                    Se connecter\r\n                  </button>\r\n                </div>\r\n                \r\n                <div class=\"mt-4 text-center\">\r\n                  <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i> Mot de passe oublié ?</a>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-5 text-center\">\r\n          <p>Système de gestion des lignes aériennes de distribution HTA<br>{{year}} © SysGLAD<sup>HTA</sup>.</p>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-passwordreset',\r\n  templateUrl: './passwordreset.component.html',\r\n  styleUrls: ['./passwordreset.component.scss']\r\n})\r\n\r\n/**\r\n * Reset-password component\r\n */\r\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\r\n\r\n  resetForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  success = '';\r\n  loading = false;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.resetForm = this.formBuilder.group({\r\n      email: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.resetForm.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    this.success = '';\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.resetForm.invalid) {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden\">\r\n          <div class=\"bg-soft bg-primary\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"text-primary p-4\">\r\n                  <h5 class=\"text-primary\"> Réinitialiser le mot de passe</h5>\r\n                  <p>Demandez la réinitialisation de votre mot de passe aux administrateurs</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n\r\n            <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n              <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n              <div class=\"mb-3\">\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Matricule\" />\r\n\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.email.errors.required\">Matricule est obligatoire</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"text-end\">\r\n                <button class=\"btn btn-primary w-md\" type=\"submit\">Soumettre</button>\r\n              </div>\r\n            </form>\r\n\r\n          </div> <!-- end card-body-->\r\n        </div>\r\n        <!-- end card -->\r\n        <div class=\"mt-5 text-center\">\r\n          <p>Vous vous en souvenez ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Se connecter ici</a> </p>\r\n          <p>{{year}} © SysGLAD<sup>HTA</sup></p>\r\n        </div>\r\n\r\n      </div> <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n  </div>\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->"],"names":[],"sourceRoot":"webpack:///"}