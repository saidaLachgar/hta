{"version":3,"file":"src_app_pages_UserPermissions_user-permissions_module_ts.js","mappings":"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","sources":["./src/app/core/const/access.ts","./src/app/core/guards/role.guard.ts","./src/app/pages/UserPermissions/user-permissions-routing.module.ts","./src/app/pages/UserPermissions/user-permissions.component.ts","./src/app/pages/UserPermissions/user-permissions.component.html","./src/app/pages/UserPermissions/user-permissions.module.ts"],"sourcesContent":["import { EntityAccess } from \"../models\";\r\n\r\nexport const EntitiesAccess:EntityAccess[] = [\r\n    {\r\n        name: 'Travaux',\r\n        value: 'missions',\r\n        related : true,\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: \"Anomalies\",\r\n        value: \"anomalies\",\r\n        related : true,\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'Visites',\r\n        value: 'visites',\r\n        related : true,\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'Départ',\r\n        value: 'departments',\r\n        related : true,\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'Dps',\r\n        value: 'dps',\r\n        related : true,\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'Commune',\r\n        value: 'communes',\r\n        related : true,\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'Tronçon',\r\n        value: 'edges',\r\n        related : true,\r\n        permissions: -1\r\n    },\r\n    {\r\n        name: 'Postes',\r\n        value: 'postes',\r\n        related : true,\r\n        permissions: -1\r\n    },\r\n    {\r\n        name: 'Appareils coupeur',\r\n        value: 'nodes',\r\n        related : true,\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'État du suivi',\r\n        value: 'objectives',\r\n        permissions: [0, 1, 2, 4]\r\n    },\r\n    {\r\n        name: 'Groupe d\\'objectif',\r\n        value: 'goal_groups',\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'Objectives',\r\n        value: 'goals',\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n   \r\n    {\r\n        name: 'Équipes',\r\n        value: 'teams',\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    \r\n    {\r\n        name: 'Members',\r\n        value: 'users',\r\n        permissions: [0, 1, 2, 3, 4]\r\n    },\r\n    {\r\n        name: 'Profile',\r\n        value: 'profile',\r\n        permissions: 0\r\n    },\r\n    {\r\n        name: 'Statistiques',\r\n        value: 'statistiques',\r\n        permissions: 4\r\n    },\r\n    {\r\n        name: 'Autorisation',\r\n        value: 'autorisation',\r\n        permissions: 4\r\n    },\r\n    {\r\n        name: 'Historique',\r\n        value: 'logs',\r\n        permissions: 4\r\n    },\r\n];\r\n\r\nexport const PermissionsIndex = [ // has all checkboxes -> -1\r\n    {name:'Modifier', value: 'update'}, // -> 0\r\n    {name:'Supprimer', value: 'delete'}, // -> 1\r\n    {name:'Ajouter', value: 'add'}, // -> 2\r\n    {name:'Details', value: 'details'}, // -> 3\r\n    {name:'Afficher', value: 'show'}, // -> 4\r\n    {name:'Exporter', value: 'export'}, // -> 5\r\n    {name:'Importer', value: 'import'}, // -> 6\r\n    // {name:'Profile', value: 'profile'}, // -> 7\r\n]","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoleGuard implements CanActivate {\r\n    constructor(private router: Router, private authService: AuthenticationService) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        let authorized = this.authService.isAuthorized(route.data.access);\r\n        if(authorized) return true;\r\n        alert(\"accès refusé\");\r\n        this.router.navigate(['/dashboard']);\r\n        return false;\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleGuard } from 'src/app/core/guards/role.guard';\r\nimport { UserPermissionsComponent } from './user-permissions.component';\r\n\r\nconst routes: Routes = [\r\n    {path: '', component: UserPermissionsComponent, canActivate: [RoleGuard], data: {access: 'autorisation_show'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserPermissionsRoutingModule { }\r\n","import { Component } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from \"@angular/forms\";\r\nimport { HotToastService } from \"@ngneat/hot-toast\";\r\nimport { forkJoin, Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { EntitiesAccess, PermissionsIndex } from \"src/app/core/const/access\";\r\nimport { UserPermissions } from \"src/app/core/models\";\r\nimport { AuthenticationService } from \"src/app/core/services/auth.service\";\r\nimport { UserPermissionsService } from \"./user-permissions.service\";\r\n\r\nconst Equals = (x, y) => {\r\n    const xu = [...new Set(x).values()]; // unique values of x\r\n    const yu = [...new Set(y).values()]; // unique values of y\r\n    return xu.length != yu.length ? false : xu.every(x => yu.includes(x));\r\n}\r\n@Component({\r\n    selector: \"app-users-list\",\r\n    templateUrl: \"./user-permissions.component.html\",\r\n})\r\nexport class UserPermissionsComponent {\r\n    breadCrumbItems: Array<{}>;\r\n    UserPermissions$: Observable<UserPermissions[]>;\r\n    OldPermissions: UserPermissions[];\r\n    form: FormGroup;\r\n    submitted = false;\r\n    readonly EntitiesAccess= EntitiesAccess;\r\n    readonly PermissionsIndex = PermissionsIndex;\r\n\r\n    constructor(\r\n        public service: UserPermissionsService,\r\n        private fb: FormBuilder,\r\n        private toast: HotToastService,\r\n        private auth: AuthenticationService,\r\n    ) {\r\n        this.form = fb.group({});\r\n        this.UserPermissions$ = service.getAll()\r\n            .pipe(tap(data => {\r\n                let formGroups = {};\r\n                data.forEach(group => {\r\n                    formGroups[group.role] = new FormArray([]);\r\n                    if (group.permissions) {\r\n                        group.permissions.forEach(permission => {\r\n                            formGroups[group.role].push(new FormControl(permission)) // Selected\r\n                        });\r\n                    }\r\n                });\r\n                this.form = fb.group(formGroups);\r\n                this.OldPermissions = data;\r\n            }));\r\n    }\r\n\r\n\r\n    isChecked(value: string, formArrayName: string) {\r\n        const formArray: FormArray = this.form.get(formArrayName) as FormArray;\r\n        return formArray.controls.filter((item: FormControl) => item.value == value).length;\r\n    }\r\n\r\n    onChange(e: Event, formArrayName: string) {\r\n        const formArray: FormArray = this.form.get(formArrayName) as FormArray;\r\n        const target = e.target as HTMLInputElement;\r\n        if (target.checked)\r\n            formArray.push(new FormControl(target.value)) // Selected\r\n        else\r\n            formArray.controls.forEach((item: FormControl, i) => {\r\n                if (item.value == target.value) {\r\n                    formArray.removeAt(i);\r\n                    return;\r\n                }\r\n            })\r\n                ;\r\n    }\r\n\r\n    /**\r\n   * Persist : update\r\n   */\r\n    onSubmit(): void {\r\n        this.submitted = true;\r\n        let values = this.form.value;\r\n        let toast = this.toast;\r\n        let observables = [];\r\n\r\n        this.OldPermissions.forEach(group => {\r\n            if (\r\n                // group.permissions &&// not null\r\n                !Equals(group.permissions, values[group.role]) // is updated\r\n            ) {\r\n                console.log(\"create an observable\")\r\n                let newPermissions:UserPermissions = {...group} ;\r\n                newPermissions.permissions = values[group.role];\r\n                observables.push(this.service.update(newPermissions))\r\n            }\r\n        });\r\n\r\n        if(observables.length){\r\n            observables.push(this.auth.refreshToken())\r\n             forkJoin(observables)\r\n            .subscribe({\r\n                error: () => toast.error(\"un problème est survenu, veuillez réessayer\"),\r\n                complete() {\r\n                    toast.success(\"Les permissions ont été mises à jour avec succès\");\r\n                    this.submitted = false;\r\n                    setTimeout(() => location.reload(), 1000);\r\n                },\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\n// userRoles = [\r\n//     { name: 'Admin' },\r\n//     { name: 'Editor' },\r\n//     { name: 'Viewer' },\r\n//   ];\r\n//   permissionsForm: FormGroup;\r\n\r\n// constructor() {\r\n//     this.permissionsForm = new FormGroup({});\r\n//     this.userRoles.forEach((role, index) => {\r\n//       this.permissionsForm.addControl(`${index}_edit`, new FormControl(false));\r\n//       this.permissionsForm.addControl(`${index}_modify`, new FormControl(false));\r\n//       this.permissionsForm.addControl(`${index}_delete`, new FormControl(false));\r\n//       this.permissionsForm.addControl(`${index}_add`, new FormControl(false));\r\n//       this.permissionsForm.addControl(`${index}_import`, new FormControl(false));\r\n//     });\r\n//   }\r\n\r\n//   onEditChange(role: string, value: boolean) {\r\n//     console.log(`${role} can edit: ${value}`);\r\n//   }","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title title=\"Autorisation des utilisateurs\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n    <div class=\"alert alert-info mt-3\">\r\n        <h6 class=\"alert-heading\">La durée de la session</h6>\r\n        Pour que les changements soient immédiatement pris en compte, l'utilisateur doit se déconnecter et s'authentifier à nouveau.<br>\r\n        Sinon les changements seront effectués lorsque la session expire ou l'utilisateur n'est pas autorisé à une interface.<br>\r\n        <small>La session de l'utilisateur est mise à jour <b>chaque 5 min</b></small>\r\n    </div>\r\n    <!-- end page title -->\r\n    <form class=\"row mt-4\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <fieldset class=\"col-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <i class=\"bx bx-loader-alt fa-spin text-center fs-1 text-primary d-block m-5\" *ngIf=\"!submitted && (service.loading$ | async)\"></i>\r\n\r\n                    <ng-container *ngIf=\"(UserPermissions$ | async) as UserPermissions\">\r\n                    <div class=\"row\">\r\n                        <ul ngbNav #nav=\"ngbNav\" [activeId]=\"0\" class=\"nav-tabs\">\r\n                            <li *ngFor=\"let r of UserPermissions; let j=index\"\r\n                                [ngbNavItem]=\"j\"\r\n                                >\r\n                                <a ngbNavLink>\r\n                                    <span>{{r.label}}</span>\r\n                                </a>\r\n                                <ng-template ngbNavContent>\r\n                                    <div class=\"table-responsive mt-4\">\r\n                                        <table class=\"table table-striped table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th></th>\r\n                                                    <th *ngFor=\"let permission of PermissionsIndex; let i=index\">{{permission.name}}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr *ngFor=\"let access of EntitiesAccess; let i=index\">\r\n                                                    <th>{{access.name}}</th>\r\n        \r\n                                                    <!-- full access -->\r\n                                                    <td *ngFor=\"let permission of PermissionsIndex; let i=index\">\r\n                                                        <ng-container \r\n                                                            *ngIf=\"\r\n                                                                access.permissions === -1 || \r\n                                                                ((access.permissions | typeof) === 'number' && i == access.permissions) ||\r\n                                                                ((access.permissions | typeof) === 'object' && access.permissions.indexOf(i) > -1);\r\n                                                                else disabled\r\n                                                            \">\r\n                                                            <label title=\"{{permission.name}}\">\r\n                                                                <input type=\"checkbox\" \r\n                                                                    [formArrayName]=\"r.role\"\r\n                                                                    (change)=\"onChange($event, r.role)\"\r\n                                                                    [value]=\"access.value+'_'+permission.value\"\r\n                                                                    [checked]=\"isChecked(access.value+'_'+permission.value, r.role)\"\r\n                                                                >\r\n                                                                <small class=\"text-muted\" *ngIf=\"r.role != 'ROLE_SUPER_ADMIN' && permission.value == 'show' && access.related\"> (Seul concerné)</small>\r\n                                                            </label>\r\n                                                        </ng-container>\r\n                                                        <ng-template #disabled>\r\n                                                            <label>\r\n                                                                <input style=\"opacity: 0.3;\" type=\"checkbox\" disabled>\r\n                                                            </label>\r\n                                                        </ng-template>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </li>\r\n                        </ul>\r\n                        <div [ngbNavOutlet]=\"nav\"></div>\r\n                    </div>\r\n                    <div class=\"row justify-content-end\">\r\n                        <div class=\"col-auto\">\r\n                            <button class=\"btn btn-primary\">\r\n                                <i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"submitted && (service.loading$ | async)\"></i>\r\n                                Sauvegarder\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <!-- end col -->\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\r\n\r\nimport { UserPermissionsComponent } from './user-permissions.component';\r\nimport { UserPermissionsRoutingModule } from './user-permissions-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { TypeofPipe } from 'src/app/core/pipes';\r\n\r\n@NgModule({\r\n  imports: [\r\n    UserPermissionsRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    UserPermissionsComponent,\r\n    TypeofPipe,\r\n  ],\r\n})\r\nexport class UserPermissionsModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}