{"version":3,"file":"src_app_pages_nodes_node_module_ts.js","mappings":"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","sources":["./src/app/pages/nodes/node-create/node-create.component.ts","./src/app/pages/nodes/node-create/node-create.component.html","./src/app/pages/nodes/node-details/node-details.component.ts","./src/app/pages/nodes/node-details/node-details.component.html","./src/app/pages/nodes/node-routing.module.ts","./src/app/pages/nodes/node-update/node-update.component.ts","./src/app/pages/nodes/node-update/node-update.component.html","./src/app/pages/nodes/node.module.ts","./src/app/pages/nodes/nodes-list/nodes-list.component.ts","./src/app/pages/nodes/nodes-list/nodes-list.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { nodeService } from \"../node.service\";\r\n@Component({\r\n  selector: \"app-node-create\",\r\n  templateUrl: \"./node-create.component.html\",\r\n})\r\nexport class nodeCreateComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  \r\n  constructor(private fb: FormBuilder, public nodeService: nodeService) {\r\n    this.breadCrumbItems = [{ label: 'Appareils' }, { label: 'Nouvel appareil', active: true }];\r\n    nodeService.loadDepartments(false);\r\n    nodeService.nodeForm = this.fb.group({\r\n      titre: [\"\", Validators.required],\r\n      department: [\"\"],\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <!-- start page title -->\r\n  <app-page-title\r\n    title=\"Nouvel appareil\"\r\n    [Loading]=\"nodeService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n  ></app-page-title>\r\n  <!-- end page title -->\r\n\r\n  <form class=\"row mt-4\" [formGroup]=\"nodeService.nodeForm\" (ngSubmit)=\"nodeService.onCreate()\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"name-input\" class=\"col-md-2 col-form-label\">Titre</label>\r\n            <div class=\"col-md-10\">\r\n              <input\r\n                formControlName=\"titre\"\r\n                [ngClass]=\"{'is-invalid':nodeService.titre.invalid && nodeService.submitted}\"\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                id=\"name-input\"\r\n              />\r\n              <div\r\n                *ngIf=\"nodeService.submitted && nodeService.titre.errors\"\r\n                class=\"invalid-feedback\">\r\n                <span *ngIf=\"nodeService.titre.errors.required\">Ce champ est obligatoire.</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3 row\">\r\n            <label for=\"name-input\" class=\"col-md-2 col-form-label\">Départ</label>\r\n            <div class=\"col-md-10\">\r\n              <ng-select formControlName=\"department\" placeholder=\"Dépar..\">\r\n                <ng-option *ngFor=\"let depar of (nodeService.departments$ | async)\" [value]=\"'/api/departments/'+depar.id\">{{depar.titre}}</ng-option>\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row justify-content-end\">\r\n            <div class=\"col-auto\">\r\n              <button class=\"btn btn-light me-2\" routerLink=\"/nodes\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n              <button class=\"btn btn-primary\"><i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"nodeService.loading$ | async\"></i> Ajouter</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end col -->\r\n  </form>\r\n  <!-- end row -->\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Node } from 'src/app/core/models';\r\nimport { AuthenticationService } from 'src/app/core/services/auth.service';\r\nimport { nodeService } from '../node.service';\r\n\r\n@Component({\r\n  selector: 'app-node-details',\r\n  templateUrl: './node-details.component.html',\r\n})\r\nexport class nodeDetailsComponent {\r\n  node: Node;\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(private route: ActivatedRoute, public service: nodeService, public authService: AuthenticationService) { \r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    service.getByKey(id).subscribe(obj => this.node = obj);\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title\r\n      title=\"Détails de l'appareil\"\r\n      [Loading]=\"service.loading$ | async\"\r\n      [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-body pt-5\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-nowrap mb-0\">\r\n            <tbody *ngIf=\"node\">\r\n              <tr>\r\n                <th scope=\"row\">Nom :</th>\r\n                <td>{{node.titre}}</td>\r\n              </tr>\r\n              <tr valign=\"middle\">\r\n                <th scope=\"row\">Départ :</th>\r\n                <td>\r\n                  <a \r\n                      *ngIf=\"node.department\"\r\n                      [routerLink]=\"authService.isAuthorized('departments_details') ? ['/departments/details', node.department.id] : null\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\">{{node.department.titre}}</a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button class=\"btn btn-light mt-4 float-end\" routerLink=\"/nodes\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleGuard } from 'src/app/core/guards/role.guard';\r\nimport { nodeCreateComponent } from './node-create/node-create.component';\r\nimport { nodeDetailsComponent } from './node-details/node-details.component';\r\nimport { nodeUpdateComponent } from './node-update/node-update.component';\r\nimport { nodesListComponent } from './nodes-list/nodes-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: nodesListComponent, canActivate: [RoleGuard], data: {access: 'nodes_show'}},\r\n  {path: 'add', component: nodeCreateComponent, canActivate: [RoleGuard], data: {access: 'nodes_add'}},\r\n  {path: 'update/:id', component: nodeUpdateComponent, canActivate: [RoleGuard], data: {access: 'nodes_update'}},\r\n  {path: 'details/:id', component: nodeDetailsComponent, canActivate: [RoleGuard], data: {access: 'nodes_details'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class nodeRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {  FormBuilder, Validators } from '@angular/forms';\r\nimport { nodeService } from '../node.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { concat, of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-node-update',\r\n  templateUrl: './node-update.component.html',\r\n})\r\nexport class nodeUpdateComponent {\r\n  breadCrumbItems: Array<{}>;\r\n  id: number;\r\n\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, public nodeService: nodeService) { \r\n    this.breadCrumbItems = [{ label: 'Appareils' }, { label: 'Mettre à jour l\\'appareil', active: true }];\r\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\r\n    nodeService.loadDepartments();\r\n      \r\n    nodeService.nodeForm = this.fb.group({\r\n      titre: [\"\", Validators.required],\r\n      department: [\"\"],\r\n      postes: [[]],\r\n    });\r\n    nodeService.getByKey(this.id).subscribe((obj) => {\r\n      nodeService.nodeForm.patchValue({\r\n        titre : obj.titre,\r\n        department :obj.department ? obj.department[\"@id\"] : null,\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <!-- start page title -->\r\n    <app-page-title\r\n      title=\"Mettre à jour l'appareil\"\r\n      [Loading]=\"nodeService.loading$ | async\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n    ></app-page-title>\r\n    <!-- end page title -->\r\n  \r\n    <form class=\"row mt-4\" [formGroup]=\"nodeService.nodeForm\" (ngSubmit)=\"nodeService.onUpdate(id)\">\r\n      <fieldset class=\"col-12\" [disabled]=\"nodeService.loading$ | async\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n           \r\n\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"name-input\" class=\"col-md-2 col-form-label\">Titre</label>\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  formControlName=\"titre\"\r\n                  [ngClass]=\"{'is-invalid':nodeService.titre.invalid && nodeService.submitted}\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  id=\"name-input\"\r\n                />\r\n                <div\r\n                  *ngIf=\"nodeService.submitted && nodeService.titre.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <span *ngIf=\"nodeService.titre.errors.required\">Ce champ est obligatoire.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 row\">\r\n              <label for=\"name-input\" class=\"col-md-2 col-form-label\">Départ</label>\r\n              <div class=\"col-md-10\">\r\n                <ng-select formControlName=\"department\" placeholder=\"Dépar..\">\r\n                  <ng-option *ngFor=\"let depar of (nodeService.departments$ | async)\" [value]=\"'/api/departments/'+depar.id\">{{depar.titre}}</ng-option>\r\n                </ng-select>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"row justify-content-end\">\r\n              <div class=\"col-auto\">\r\n                <button class=\"btn btn-light me-2\" routerLink=\"/nodes\"><i class=\"fas fa-arrow-circle-left me-1\"></i>Retour à la liste</button>\r\n                <button class=\"btn btn-primary\"><i class=\"bx bx-loader-alt fa-spin\" *ngIf=\"nodeService.submitted && (nodeService.loading$ | async)\"></i> Sauvegarder</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <!-- end col -->\r\n    </form>\r\n    <!-- end row -->\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\r\n\r\n// import { UIModule } from 'src/app/shared/ui/ui.module';\r\nimport { nodeRoutingModule } from './node-routing.module';\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { nodeCreateComponent } from './node-create/node-create.component';\r\nimport { nodeDetailsComponent } from './node-details/node-details.component';\r\nimport { nodeUpdateComponent } from './node-update/node-update.component';\r\nimport { nodesListComponent } from './nodes-list/nodes-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    nodeRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    nodesListComponent,\r\n    nodeCreateComponent,\r\n    nodeUpdateComponent,\r\n    nodeDetailsComponent,\r\n  ],\r\n})\r\nexport class nodeModule { }\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { NgSelectConfig } from \"@ng-select/ng-select\";\r\nimport { AuthenticationService } from \"src/app/core/services/auth.service\";\r\nimport { nodeService } from \"../node.service\";\r\n\r\n@Component({\r\n  selector: \"app-nodes-list\",\r\n  templateUrl: \"./nodes-list.component.html\",\r\n})\r\nexport class nodesListComponent {\r\n  breadCrumbItems: Array<{}>;\r\n\r\n  constructor(\r\n    public service: nodeService,\r\n    private fb: FormBuilder,\r\n    public authService: AuthenticationService,\r\n    private config: NgSelectConfig\r\n  ) {\r\n    service.findAll();\r\n    service.loadDepartments(false);\r\n\r\n    service.nodeForm = fb.group({\r\n      id: [\"\"],\r\n      titre: [''],\r\n      \"department.id[]\": [''],\r\n    });\r\n\r\n    config.notFoundText = 'Aucune donnée trouvée !';\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid mb-5\">\r\n  <div class=\"row align-items-center justify-content-between mb-4\">\r\n    <div class=\"col-auto\">\r\n      <app-page-title\r\n        title=\"Les appareils de coupeur\"\r\n        [breadcrumbItems]=\"breadCrumbItems\"\r\n      ></app-page-title>\r\n    </div>\r\n    <div class=\"col-auto\">\r\n      <a routerLink=\"/nodes/add\" class=\"btn btn-primary ms-2\"\r\n      *ngIf=\"authService.isAuthorized('nodes_add')\"\r\n        ><i class=\"fas fa-plus-circle\"></i> Ajouter</a\r\n      >\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <!-- Table -->\r\n          <form [formGroup]=\"service.nodeForm\" (ngSubmit)=\"service.onSearch()\" class=\"table-responsive\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"100px\">ID</th>\r\n                  <th>Appareil de coupeur</th>\r\n                  <th>Départ</th>\r\n                  <th width=\"123px\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr valign=\"middle\" \r\n                >\r\n                  <td><input type=\"text\" placeholder=\"ID...\" formControlName=\"id\" #searchId class=\"form-control\"></td>\r\n                  <td><input type=\"text\" placeholder=\"Titre...\" formControlName=\"titre\" #searchTitre class=\"form-control\"></td>\r\n                  <td>\r\n                    <ng-select [items]=\"service.departments$ | async\"\r\n                              #searchDepar\r\n                              formControlName=\"department.id[]\"\r\n                              bindLabel=\"titre\"\r\n                              bindValue=\"id\"\r\n                              [multiple]=\"true\"\r\n                              [minTermLength]=\"2\"\r\n                              placeholder=\"Départ..\"\r\n                              [loading]=\"service.departmentLoading\"\r\n                              typeToSearchText=\"Veuillez saisir 2 caractères ou plus\"\r\n                              [typeahead]=\"service.departmentInput$\">\r\n                    </ng-select>\r\n                  </td>\r\n                  <td>\r\n                    <button type=\"submit\" class=\"btn btn-sm btn-primary d-flex align-items-center\">\r\n                      <i class=\"bx bx-search me-1\"></i>Rechercher\r\n                    </button>\r\n                    <button type=\"reset\" class=\"btn btn-sm text-primary flex align-items-center\" (click)=\"service.findAll()\">\r\n                      <i class=\"bx bx-x me-1\"></i>Réinitialiser\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"4\"\r\n                    *ngIf=\"!(service.nodes$ | async) && service.loading$ | async\"\r\n                  >\r\n                    Chargement...\r\n                  </td>\r\n                  <td\r\n                    class=\"text-center\"\r\n                    colspan=\"4\"\r\n                    *ngIf=\"(service.nodes$ | async) && (service.nodes$ | async).length === 0 && service.loaded$ | async\"\r\n                  >\r\n                  Aucune donnée trouvée !\r\n                  </td>\r\n                </tr>\r\n                <tr *ngFor=\"let node of (service.nodes$ | async); let i = index\">\r\n                  <td>\r\n                    <ngb-highlight\r\n                      [result]=\"node.id\"\r\n                      [term]=\"searchId.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                   <td>\r\n                    <ngb-highlight\r\n                      [result]=\"node.titre\"\r\n                      [term]=\"searchTitre.value\"\r\n                    ></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <a \r\n                      *ngIf=\"node.department\"\r\n                      [routerLink]=\"authService.isAuthorized('departments_details') ? ['/departments/details', node.department.id] : null\"\r\n                      target=\"_blank\" rel=\"noopener noreferrer\">{{node.department.titre}}</a>\r\n                  </td>\r\n                  \r\n                  <td align=\"center\">\r\n                    <div ngbDropdown \r\n                      placement=\"bottom-left\"\r\n                      *ngIf=\"authService.isAuthorized('nodes_details') || authService.isAuthorized('nodes_update') || authService.isAuthorized('nodes_delete')\"\r\n                      >\r\n                      <i\r\n                        class=\"fas fa-ellipsis-h dropdown-toggle c-pointer\"\r\n                        ngbDropdownToggle\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"true\"\r\n                      ></i>\r\n                      <div\r\n                        class=\"dropdown-menu dropdown-menu-end\"\r\n                        ngbDropdownMenu\r\n                      >\r\n                        <a class=\"dropdown-item\"\r\n                          [routerLink]=\"['details', node.id]\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('nodes_details')\"\r\n                          >\r\n                          <i class=\"fas fa-eye me-2\"></i> Voir\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('nodes_update')\"\r\n                          [routerLink]=\"['update', node.id]\"\r\n                          >\r\n                          <!-- skipLocationChange -->\r\n                          <i class=\"fas fa-edit me-2\"></i> Modifier\r\n                        </a>\r\n                        <a\r\n                          class=\"dropdown-item text-danger\"\r\n                          href=\"javascript: void(0);\"\r\n                          *ngIf=\"authService.isAuthorized('nodes_delete')\"\r\n                          (click)=\"service.deleteItem(node.id, $event.target)\"\r\n                        >\r\n                          <i class=\"fas fa-trash me-2\"></i> Supprimer\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <!-- End table -->\r\n          <!-- Pagination -->\r\n          <ng-container *ngIf=\"(service.pagination$ | async) as pagination\">\r\n            <div\r\n              *ngIf=\"pagination.totalRecords > service.pageSize\"\r\n              class=\"row justify-content-md-between align-items-md-center mt-2\"\r\n            >\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div\r\n                  class=\"dataTables_info mb-2\"\r\n                  id=\"tickets-table_info\"\r\n                  role=\"status\"\r\n                  aria-live=\"polite\"\r\n                >\r\n                Affichage de {{pagination.startIndex}} \r\n                à {{pagination.endIndex}} \r\n                de {{pagination.totalRecords}} entrées\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-12 col-md-5\">\r\n                <div class=\"text-md-right float-md-end pagination-rounded\">\r\n                  <ngb-pagination\r\n                    [collectionSize]=\"pagination.totalRecords\"\r\n                    [(page)]=\"service.page\"\r\n                    [pageSize]=\"service.pageSize\"\r\n                    (pageChange)=\"service.onPaginate($event)\" [maxSize]=\"5\" \r\n                  >\r\n                  </ngb-pagination>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <!-- End Pagination -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}